  $ ../../../../../../../../../install/default/bin/stanc --auto-format categorical_log.stan
data {
  int d_int;
  int d_int_array[d_int];
  vector[d_int] d_vector;
  row_vector[d_int] d_row_vector;
}
transformed data {
  real transformed_data_real;
  transformed_data_real = categorical_log(d_int, d_vector);
  transformed_data_real = categorical_log(d_int_array, d_vector);
}
parameters {
  vector[d_int] p_vector;
  row_vector[d_int] p_row_vector;
  real y_p;
}
transformed parameters {
  real transformed_param_real;
  transformed_param_real = categorical_log(d_int, d_vector);
  transformed_param_real = categorical_log(d_int, p_vector);
  transformed_param_real = categorical_log(d_int_array, d_vector);
  transformed_param_real = categorical_log(d_int_array, p_vector);
}
model {
  y_p ~ normal(0, 1);
}

  $ ../../../../../../../../../install/default/bin/stanc --auto-format categorical_logit_glm.stan
transformed data {
  int N = 2;
  int M = 3;
  int d_y = 1;
  int d_y_a[N] = {1, 0};
  matrix[N, M] d_x_m = [[1, 2, 3], [4, 5, 6]];
  row_vector[M] d_x_rv = [1, 2, 3];
  matrix[N, M] d_beta_m = [[1, 2, 3], [4, 5, 6]];
  vector[N] d_alpha_v = [0.5, 0.6]';
  real transformed_data_real;
  transformed_data_real = categorical_logit_glm_lpmf(d_y| d_x_m, d_alpha_v, d_beta_m);
  transformed_data_real = categorical_logit_glm_lpmf(d_y| d_x_rv, d_alpha_v, d_beta_m);
  transformed_data_real = categorical_logit_glm_lpmf(d_y_a| d_x_m, d_alpha_v, d_beta_m);
  transformed_data_real = categorical_logit_glm_lpmf(d_y_a| d_x_rv, d_alpha_v, d_beta_m);
}
parameters {
  int p_y;
  int p_y_a[N];
  matrix[N, M] p_x_m;
  row_vector[M] p_x_rv;
  matrix[N, M] p_beta_m;
  vector[N] p_alpha_v;
  real y_p;
}
transformed parameters {
  real transformed_param_real;
  transformed_param_real = categorical_logit_glm_lpmf(p_y| p_x_m, p_alpha_v, p_beta_m);
  transformed_param_real = categorical_logit_glm_lpmf(p_y| p_x_rv, p_alpha_v, p_beta_m);
  transformed_param_real = categorical_logit_glm_lpmf(p_y_a| p_x_m, p_alpha_v, p_beta_m);
  transformed_param_real = categorical_logit_glm_lpmf(p_y_a| p_x_rv, p_alpha_v, p_beta_m);
}
model {
  y_p ~ normal(0, 1);
}


Semantic error in 'categorical_logit_glm.stan', line 17, column 26 to column 85:
   -------------------------------------------------
    15:    real transformed_data_real;
    16:  
    17:    transformed_data_real = categorical_logit_glm_lpmf(d_y| d_x_m, d_alpha_v, d_beta_m);
                                   ^
    18:    transformed_data_real = categorical_logit_glm_lpmf(d_y| d_x_rv, d_alpha_v, d_beta_m);
    19:    transformed_data_real = categorical_logit_glm_lpmf(d_y_a| d_x_m, d_alpha_v, d_beta_m);
   -------------------------------------------------

Ill-typed arguments supplied to function 'categorical_logit_glm_lpmf'. Available signatures: 
(int[], row_vector, vector, matrix) => real
(int[], matrix, vector, matrix) => real
Instead supplied arguments of incompatible type: int, matrix, vector, matrix.

  $ ../../../../../../../../../install/default/bin/stanc --auto-format categorical_logit_log.stan
data {
  int d_int;
  int d_int_array[d_int];
  vector[d_int] d_vector;
  row_vector[d_int] d_row_vector;
}
transformed data {
  real transformed_data_real;
  transformed_data_real = categorical_logit_log(d_int, d_vector);
  transformed_data_real = categorical_logit_log(d_int_array, d_vector);
}
parameters {
  vector[d_int] p_vector;
  row_vector[d_int] p_row_vector;
  real y_p;
}
transformed parameters {
  real transformed_param_real;
  transformed_param_real = categorical_logit_log(d_int, d_vector);
  transformed_param_real = categorical_logit_log(d_int, p_vector);
  transformed_param_real = categorical_logit_log(d_int_array, d_vector);
  transformed_param_real = categorical_logit_log(d_int_array, p_vector);
}
model {
  y_p ~ normal(0, 1);
}

