  $ ../../../../../../install/default/bin/stanc --auto-format is_real.stan
functions {
  int is_real(real x) {
    return 1;
  }
  
  int is_real(int x) {
    return 0;
  }
}
transformed data {
  if (is_real(1.5)) {
    print(is_real(0));
  }
}

  $ ../../../../../../install/default/bin/stanc --auto-format multi_fun.stan
functions {
  int foo(int a) {
    return a;
  }
  real foo(real b) {
    return b;
  }
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../../install/default/bin/stanc --auto-format num_args.stan
functions {
  real foo(real one) {
    return 1.0;
  }
  
  real foo(real one, real two) {
    return 2.0;
  }
}

  $ ../../../../../../install/default/bin/stanc --auto-format redefine-ccdf3.stan
functions {
  real foo_lccdf(int n, real x) {
    return -x ^ 2;
  }
  real foo_ccdf_log(int n, real x) {
    return -x ^ 2;
  }
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../../install/default/bin/stanc --auto-format redefine-cdf3.stan
functions {
  real foo_lcdf(int n, real x) {
    return -x ^ 2;
  }
  real foo_cdf_log(int n, real x) {
    return -x ^ 2;
  }
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../../install/default/bin/stanc --auto-format redefine-prob1.stan
functions {
  real poisson_lpdf(real n, real x) {
    return -x ^ 2;
  }
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../../install/default/bin/stanc --auto-format redefine-prob3.stan
functions {
  real foo_log(int y) {
    return -y ^ 2;
  }
  real foo_lpmf(int y) {
    return y ^ 2 / 2;
  }
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../../install/default/bin/stanc --auto-format stan_math.stan
functions {
  vector to_vector(real one, real two, real three) {
    vector[3] r = [one, two, three]';
    return r;
  }
  
  void to_vector(int x) {
    return;
  }
}
transformed data {
  vector[3] v1 = to_vector(1, 2, 3);
  vector[3] v2 = to_vector({1, 2, 3});
  to_vector(3);
}

