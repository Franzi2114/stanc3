  $ ../../../../../../install/default/bin/stanc --debug-transformed-mir complex.stan
((functions_block ()) (input_vars ((a SComplex)))
 (prepare_data
  (((pattern
     (Decl (decl_adtype DataOnly) (decl_id pos__) (decl_type (Sized SInt))))
    (meta <opaque>))
   ((pattern
     (Assignment (pos__ UInt ())
      ((pattern (Lit Int 1))
       (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))))
    (meta <opaque>))
   ((pattern
     (Decl (decl_adtype DataOnly) (decl_id a) (decl_type (Sized SComplex))))
    (meta <opaque>))
   ((pattern
     (Assignment (a UComplex ())
      ((pattern
        (Indexed
         ((pattern
           (FunApp (CompilerInternal FnReadData)
            (((pattern (Lit Str a))
              (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly)))))))
          (meta
           ((type_ (UArray UComplex)) (loc <opaque>) (adlevel DataOnly))))
         ((Single
           ((pattern (Lit Int 1))
            (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))))))
       (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly))))))
    (meta <opaque>))))
 (log_prob
  (((pattern
     (Decl (decl_adtype AutoDiffable) (decl_id b)
      (decl_type (Sized SComplex))))
    (meta <opaque>))
   ((pattern
     (Assignment (b UComplex ())
      ((pattern (FunApp (CompilerInternal (FnReadParam ())) ()))
       (meta ((type_ UComplex) (loc <opaque>) (adlevel AutoDiffable))))))
    (meta <opaque>))))
 (generate_quantities
  (((pattern
     (Decl (decl_adtype DataOnly) (decl_id b) (decl_type (Sized SComplex))))
    (meta <opaque>))
   ((pattern
     (Assignment (b UComplex ())
      ((pattern (FunApp (CompilerInternal (FnReadParam ())) ()))
       (meta ((type_ UComplex) (loc <opaque>) (adlevel AutoDiffable))))))
    (meta <opaque>))
   ((pattern
     (NRFunApp (CompilerInternal FnWriteParam)
      (((pattern (Var b))
        (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly)))))))
    (meta <opaque>))
   ((pattern
     (IfElse
      ((pattern
        (FunApp (StanLib PNot__ FnPlain)
         (((pattern
            (EOr
             ((pattern (Var emit_transformed_parameters__))
              (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))
             ((pattern (Var emit_generated_quantities__))
              (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))))
           (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly)))))))
       (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))
      ((pattern (Block (((pattern (Return ())) (meta <opaque>)))))
       (meta <opaque>))
      ()))
    (meta <opaque>))
   ((pattern
     (IfElse
      ((pattern
        (FunApp (StanLib PNot__ FnPlain)
         (((pattern (Var emit_generated_quantities__))
           (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly)))))))
       (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))
      ((pattern (Block (((pattern (Return ())) (meta <opaque>)))))
       (meta <opaque>))
      ()))
    (meta <opaque>))))
 (transform_inits
  (((pattern
     (Decl (decl_adtype DataOnly) (decl_id pos__) (decl_type (Sized SInt))))
    (meta <opaque>))
   ((pattern
     (Assignment (pos__ UInt ())
      ((pattern (Lit Int 1))
       (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))))
    (meta <opaque>))
   ((pattern
     (Decl (decl_adtype DataOnly) (decl_id b) (decl_type (Sized SComplex))))
    (meta <opaque>))
   ((pattern
     (Assignment (b UComplex ())
      ((pattern
        (Indexed
         ((pattern
           (FunApp (CompilerInternal FnReadData)
            (((pattern (Lit Str b))
              (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly)))))))
          (meta
           ((type_ (UArray UComplex)) (loc <opaque>) (adlevel DataOnly))))
         ((Single
           ((pattern (Lit Int 1))
            (meta ((type_ UInt) (loc <opaque>) (adlevel DataOnly))))))))
       (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly))))))
    (meta <opaque>))
   ((pattern
     (NRFunApp (CompilerInternal FnWriteParam)
      (((pattern (Var b))
        (meta ((type_ UComplex) (loc <opaque>) (adlevel DataOnly)))))))
    (meta <opaque>))))
 (output_vars
  ((b
    ((out_unconstrained_st SComplex) (out_constrained_st SComplex)
     (out_block Parameters) (out_trans Identity)))))
 (prog_name complex_model) (prog_path complex.stan))
