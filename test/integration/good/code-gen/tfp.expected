  $ ../../../../../install/default/bin/stan2tfp eight_schools_ncp.stan

import numpy as np
import tensorflow as tf
import tensorflow_probability as tfp
tfd = tfp.distributions

class eight_schools_ncp_model(tfd.Distribution):

  def __init__(self, data):
    self.J = data[0]
    self.y = data[1]
    self.sigma = data[2]
     
  def log_prob(self, params):
    target = 0
    J = self.J
    y = self.y
    sigma = self.sigma
    mu = params[0]
    tau = params[1]
    theta_tilde = params[2]
    mu = tf.Variable(0, name="mu", dtype=np.float64)
    tau = tf.Variable(0, name="tau", dtype=np.float64)
    tau = exp(tau) + 0
    theta_tilde = tf.Variable(0, name="theta_tilde", dtype=np.float64)
    theta = tf.Variable(0, name="theta", dtype=np.float64)
    theta = mu + tau * theta_tilde
    target += tfd.distributions.Normal(0, 5).log_prob(mu)
    target += tfd.distributions.Cauchy(0, 5).log_prob(tau)
    target += tfd.distributions.Normal(0, 1).log_prob(theta_tilde)
    target += tfd.distributions.Normal(theta, sigma).log_prob(y)
    return target
     
