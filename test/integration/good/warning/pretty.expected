  $ ../../../../../install/default/bin/stanc --auto-format abs-deprecate.stan
transformed data {
  real mu;
  mu = abs(-1.2);
}
parameters {
  real y;
}
model {
  y ~ normal(mu, 1);
}

Warning in 'abs-deprecate.stan', line 3, column 7: Use of the `abs` function
    with real-valued arguments is deprecated; use function `fabs` instead.
  $ ../../../../../install/default/bin/stanc --auto-format binomial_coefficient_log.stan
data {
  int d_int;
  array[d_int] int d_int_array;
  array[d_int, 2] int d_int_array_2d;
  array[d_int, 2, 3] int d_int_array_3d;
  real d_real;
  array[d_int] real d_real_array;
  array[d_int, 2] real d_real_array_2d;
  array[d_int, 2, 3] real d_real_array_3d;
  matrix[d_int, d_int] d_matrix;
  array[d_int] matrix[d_int, d_int] d_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] d_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] d_matrix_array_3d;
  vector[d_int] d_vector;
  array[d_int] vector[d_int] d_vector_array;
  array[d_int, 2] vector[d_int] d_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] d_vector_array_3d;
  row_vector[d_int] d_row_vector;
  array[d_int] row_vector[d_int] d_row_vector_array;
  array[d_int, 2] row_vector[d_int] d_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] d_row_vector_array_3d;
}
transformed data {
  real transformed_data_real;
  array[d_int] real transformed_data_real_array;
  array[d_int, 2] real transformed_data_real_array_2d;
  array[d_int, 2, 3] real transformed_data_real_array_3d;
  matrix[d_int, d_int] transformed_data_matrix;
  array[d_int] matrix[d_int, d_int] transformed_data_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] transformed_data_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] transformed_data_matrix_array_3d;
  vector[d_int] transformed_data_vector;
  array[d_int] vector[d_int] transformed_data_vector_array;
  array[d_int, 2] vector[d_int] transformed_data_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] transformed_data_vector_array_3d;
  row_vector[d_int] transformed_data_row_vector;
  array[d_int] row_vector[d_int] transformed_data_row_vector_array;
  array[d_int, 2] row_vector[d_int] transformed_data_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] transformed_data_row_vector_array_3d;
  
  transformed_data_real_array = binomial_coefficient_log(d_int_array, d_int);
  transformed_data_real_array = binomial_coefficient_log(d_int_array, d_real);
  transformed_data_real_array_2d = binomial_coefficient_log(d_int_array_2d,
                                                            d_int);
  transformed_data_real_array_2d = binomial_coefficient_log(d_int_array_2d,
                                                            d_real);
  transformed_data_real_array_3d = binomial_coefficient_log(d_int_array_3d,
                                                            d_int);
  transformed_data_real_array_3d = binomial_coefficient_log(d_int_array_3d,
                                                            d_real);
  
  transformed_data_real_array = binomial_coefficient_log(d_int, d_int_array);
  transformed_data_real_array = binomial_coefficient_log(d_real, d_int_array);
  transformed_data_real_array_2d = binomial_coefficient_log(d_int,
                                                            d_int_array_2d);
  transformed_data_real_array_2d = binomial_coefficient_log(d_real,
                                                            d_int_array_2d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_int,
                                                            d_int_array_3d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_real,
                                                            d_int_array_3d);
  
  transformed_data_real_array = binomial_coefficient_log(d_int, d_real_array);
  transformed_data_real_array = binomial_coefficient_log(d_real,
                                                         d_real_array);
  transformed_data_real_array_2d = binomial_coefficient_log(d_int,
                                                            d_real_array_2d);
  transformed_data_real_array_2d = binomial_coefficient_log(d_real,
                                                            d_real_array_2d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_int,
                                                            d_real_array_3d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_real,
                                                            d_real_array_3d);
  
  transformed_data_real_array = binomial_coefficient_log(d_real_array, d_int);
  transformed_data_real_array = binomial_coefficient_log(d_real_array,
                                                         d_real);
  transformed_data_real_array_2d = binomial_coefficient_log(d_real_array_2d,
                                                            d_int);
  transformed_data_real_array_2d = binomial_coefficient_log(d_real_array_2d,
                                                            d_real);
  transformed_data_real_array_3d = binomial_coefficient_log(d_real_array_3d,
                                                            d_int);
  transformed_data_real_array_3d = binomial_coefficient_log(d_real_array_3d,
                                                            d_real);
  
  transformed_data_real_array = binomial_coefficient_log(d_int_array,
                                                         d_int_array);
  transformed_data_real_array = binomial_coefficient_log(d_real_array,
                                                         d_real_array);
  transformed_data_real_array_2d = binomial_coefficient_log(d_int_array_2d,
                                                            d_int_array_2d);
  transformed_data_real_array_2d = binomial_coefficient_log(d_real_array_2d,
                                                            d_real_array_2d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_int_array_3d,
                                                            d_int_array_3d);
  transformed_data_real_array_3d = binomial_coefficient_log(d_real_array_3d,
                                                            d_real_array_3d);
  
  transformed_data_vector = binomial_coefficient_log(d_vector, d_int);
  transformed_data_vector = binomial_coefficient_log(d_vector, d_real);
  transformed_data_vector_array = binomial_coefficient_log(d_vector_array,
                                                           d_int);
  transformed_data_vector_array = binomial_coefficient_log(d_vector_array,
                                                           d_real);
  transformed_data_vector_array_2d = binomial_coefficient_log(d_vector_array_2d,
                                                              d_int);
  transformed_data_vector_array_2d = binomial_coefficient_log(d_vector_array_2d,
                                                              d_real);
  transformed_data_vector_array_3d = binomial_coefficient_log(d_vector_array_3d,
                                                              d_int);
  transformed_data_vector_array_3d = binomial_coefficient_log(d_vector_array_3d,
                                                              d_real);
  
  transformed_data_vector = binomial_coefficient_log(d_int, d_vector);
  transformed_data_vector = binomial_coefficient_log(d_real, d_vector);
  transformed_data_vector_array = binomial_coefficient_log(d_int,
                                                           d_vector_array);
  transformed_data_vector_array = binomial_coefficient_log(d_real,
                                                           d_vector_array);
  transformed_data_vector_array_2d = binomial_coefficient_log(d_int,
                                                              d_vector_array_2d);
  transformed_data_vector_array_2d = binomial_coefficient_log(d_real,
                                                              d_vector_array_2d);
  transformed_data_vector_array_3d = binomial_coefficient_log(d_int,
                                                              d_vector_array_3d);
  transformed_data_vector_array_3d = binomial_coefficient_log(d_real,
                                                              d_vector_array_3d);
  
  transformed_data_vector = binomial_coefficient_log(d_vector, d_vector);
  transformed_data_vector_array = binomial_coefficient_log(d_vector_array,
                                                           d_vector_array);
  transformed_data_vector_array_2d = binomial_coefficient_log(d_vector_array_2d,
                                                              d_vector_array_2d);
  transformed_data_vector_array_3d = binomial_coefficient_log(d_vector_array_3d,
                                                              d_vector_array_3d);
  
  transformed_data_row_vector = binomial_coefficient_log(d_row_vector, d_int);
  transformed_data_row_vector = binomial_coefficient_log(d_row_vector,
                                                         d_real);
  transformed_data_row_vector_array = binomial_coefficient_log(d_row_vector_array,
                                                               d_int);
  transformed_data_row_vector_array = binomial_coefficient_log(d_row_vector_array,
                                                               d_real);
  transformed_data_row_vector_array_2d = binomial_coefficient_log(d_row_vector_array_2d,
                                                                  d_int);
  transformed_data_row_vector_array_2d = binomial_coefficient_log(d_row_vector_array_2d,
                                                                  d_real);
  transformed_data_row_vector_array_3d = binomial_coefficient_log(d_row_vector_array_3d,
                                                                  d_int);
  transformed_data_row_vector_array_3d = binomial_coefficient_log(d_row_vector_array_3d,
                                                                  d_real);
  
  transformed_data_row_vector = binomial_coefficient_log(d_int, d_row_vector);
  transformed_data_row_vector = binomial_coefficient_log(d_real,
                                                         d_row_vector);
  transformed_data_row_vector_array = binomial_coefficient_log(d_int,
                                                               d_row_vector_array);
  transformed_data_row_vector_array = binomial_coefficient_log(d_real,
                                                               d_row_vector_array);
  transformed_data_row_vector_array_2d = binomial_coefficient_log(d_int,
                                                                  d_row_vector_array_2d);
  transformed_data_row_vector_array_2d = binomial_coefficient_log(d_real,
                                                                  d_row_vector_array_2d);
  transformed_data_row_vector_array_3d = binomial_coefficient_log(d_int,
                                                                  d_row_vector_array_3d);
  transformed_data_row_vector_array_3d = binomial_coefficient_log(d_real,
                                                                  d_row_vector_array_3d);
  
  transformed_data_row_vector = binomial_coefficient_log(d_row_vector,
                                                         d_row_vector);
  transformed_data_row_vector_array = binomial_coefficient_log(d_row_vector_array,
                                                               d_row_vector_array);
  transformed_data_row_vector_array_2d = binomial_coefficient_log(d_row_vector_array_2d,
                                                                  d_row_vector_array_2d);
  transformed_data_row_vector_array_3d = binomial_coefficient_log(d_row_vector_array_3d,
                                                                  d_row_vector_array_3d);
  
  transformed_data_matrix = binomial_coefficient_log(d_matrix, d_int);
  transformed_data_matrix = binomial_coefficient_log(d_matrix, d_real);
  transformed_data_matrix_array = binomial_coefficient_log(d_matrix_array,
                                                           d_int);
  transformed_data_matrix_array = binomial_coefficient_log(d_matrix_array,
                                                           d_real);
  transformed_data_matrix_array_2d = binomial_coefficient_log(d_matrix_array_2d,
                                                              d_int);
  transformed_data_matrix_array_2d = binomial_coefficient_log(d_matrix_array_2d,
                                                              d_real);
  transformed_data_matrix_array_3d = binomial_coefficient_log(d_matrix_array_3d,
                                                              d_int);
  transformed_data_matrix_array_3d = binomial_coefficient_log(d_matrix_array_3d,
                                                              d_real);
  
  transformed_data_matrix = binomial_coefficient_log(d_int, d_matrix);
  transformed_data_matrix = binomial_coefficient_log(d_real, d_matrix);
  transformed_data_matrix_array = binomial_coefficient_log(d_int,
                                                           d_matrix_array);
  transformed_data_matrix_array = binomial_coefficient_log(d_real,
                                                           d_matrix_array);
  transformed_data_matrix_array_2d = binomial_coefficient_log(d_int,
                                                              d_matrix_array_2d);
  transformed_data_matrix_array_2d = binomial_coefficient_log(d_real,
                                                              d_matrix_array_2d);
  transformed_data_matrix_array_3d = binomial_coefficient_log(d_int,
                                                              d_matrix_array_3d);
  transformed_data_matrix_array_3d = binomial_coefficient_log(d_real,
                                                              d_matrix_array_3d);
  
  transformed_data_matrix = binomial_coefficient_log(d_matrix, d_matrix);
  transformed_data_matrix_array = binomial_coefficient_log(d_matrix_array,
                                                           d_matrix_array);
  transformed_data_matrix_array_2d = binomial_coefficient_log(d_matrix_array_2d,
                                                              d_matrix_array_2d);
  transformed_data_matrix_array_3d = binomial_coefficient_log(d_matrix_array_3d,
                                                              d_matrix_array_3d);
}
parameters {
  real p_real;
  array[d_int] real p_real_array;
  array[d_int, 2] real p_real_array_2d;
  array[d_int, 2, 3] real p_real_array_3d;
  matrix[d_int, d_int] p_matrix;
  array[d_int] matrix[d_int, d_int] p_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] p_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] p_matrix_array_3d;
  vector[d_int] p_vector;
  array[d_int] vector[d_int] p_vector_array;
  array[d_int, 2] vector[d_int] p_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] p_vector_array_3d;
  row_vector[d_int] p_row_vector;
  array[d_int] row_vector[d_int] p_row_vector_array;
  array[d_int, 2] row_vector[d_int] p_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] p_row_vector_array_3d;
  real y_p;
}
transformed parameters {
  array[d_int] real transformed_param_array;
  array[d_int, 2] real transformed_param_array_2d;
  array[d_int, 2, 3] real transformed_param_array_3d;
  matrix[d_int, d_int] transformed_param_matrix;
  array[d_int] matrix[d_int, d_int] transformed_param_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] transformed_param_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] transformed_param_matrix_array_3d;
  vector[d_int] transformed_param_vector;
  array[d_int] vector[d_int] transformed_param_vector_array;
  array[d_int, 2] vector[d_int] transformed_param_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] transformed_param_vector_array_3d;
  row_vector[d_int] transformed_param_row_vector;
  array[d_int] row_vector[d_int] transformed_param_row_vector_array;
  array[d_int, 2] row_vector[d_int] transformed_param_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] transformed_param_row_vector_array_3d;
  
  transformed_param_array = binomial_coefficient_log(d_int_array, p_real);
  transformed_param_array_2d = binomial_coefficient_log(d_int_array_2d,
                                                        p_real);
  transformed_param_array_3d = binomial_coefficient_log(d_int_array_3d,
                                                        p_real);
  
  transformed_param_array = binomial_coefficient_log(p_real, d_int_array);
  transformed_param_array_2d = binomial_coefficient_log(p_real,
                                                        d_int_array_2d);
  transformed_param_array_3d = binomial_coefficient_log(p_real,
                                                        d_int_array_3d);
  
  transformed_param_array = binomial_coefficient_log(p_real_array, d_int);
  transformed_param_array = binomial_coefficient_log(p_real_array, d_real);
  transformed_param_array = binomial_coefficient_log(p_real_array, p_real);
  transformed_param_array = binomial_coefficient_log(d_real_array, p_real);
  transformed_param_array_2d = binomial_coefficient_log(p_real_array_2d,
                                                        d_int);
  transformed_param_array_2d = binomial_coefficient_log(p_real_array_2d,
                                                        d_real);
  transformed_param_array_2d = binomial_coefficient_log(p_real_array_2d,
                                                        p_real);
  transformed_param_array_2d = binomial_coefficient_log(d_real_array_2d,
                                                        p_real);
  transformed_param_array_3d = binomial_coefficient_log(p_real_array_3d,
                                                        d_int);
  transformed_param_array_3d = binomial_coefficient_log(p_real_array_3d,
                                                        d_real);
  transformed_param_array_3d = binomial_coefficient_log(p_real_array_3d,
                                                        p_real);
  transformed_param_array_3d = binomial_coefficient_log(d_real_array_3d,
                                                        p_real);
  
  transformed_param_array = binomial_coefficient_log(d_int, p_real_array);
  transformed_param_array = binomial_coefficient_log(d_real, p_real_array);
  transformed_param_array = binomial_coefficient_log(p_real, p_real_array);
  transformed_param_array = binomial_coefficient_log(p_real, d_real_array);
  transformed_param_array_2d = binomial_coefficient_log(d_int,
                                                        p_real_array_2d);
  transformed_param_array_2d = binomial_coefficient_log(d_real,
                                                        p_real_array_2d);
  transformed_param_array_2d = binomial_coefficient_log(p_real,
                                                        p_real_array_2d);
  transformed_param_array_2d = binomial_coefficient_log(p_real,
                                                        d_real_array_2d);
  transformed_param_array_3d = binomial_coefficient_log(d_int,
                                                        p_real_array_3d);
  transformed_param_array_3d = binomial_coefficient_log(d_real,
                                                        p_real_array_3d);
  transformed_param_array_3d = binomial_coefficient_log(p_real,
                                                        p_real_array_3d);
  transformed_param_array_3d = binomial_coefficient_log(p_real,
                                                        d_real_array_3d);
  
  transformed_param_array = binomial_coefficient_log(d_real_array,
                                                     p_real_array);
  transformed_param_array = binomial_coefficient_log(p_real_array,
                                                     d_real_array);
  transformed_param_array = binomial_coefficient_log(p_real_array,
                                                     p_real_array);
  transformed_param_array_2d = binomial_coefficient_log(d_real_array_2d,
                                                        p_real_array_2d);
  transformed_param_array_2d = binomial_coefficient_log(p_real_array_2d,
                                                        d_real_array_2d);
  transformed_param_array_2d = binomial_coefficient_log(p_real_array_2d,
                                                        p_real_array_2d);
  transformed_param_array_3d = binomial_coefficient_log(d_real_array_3d,
                                                        p_real_array_3d);
  transformed_param_array_3d = binomial_coefficient_log(p_real_array_3d,
                                                        d_real_array_3d);
  transformed_param_array_3d = binomial_coefficient_log(p_real_array_3d,
                                                        p_real_array_3d);
  
  transformed_param_vector = binomial_coefficient_log(p_vector, p_real);
  transformed_param_vector = binomial_coefficient_log(p_vector, d_real);
  transformed_param_vector = binomial_coefficient_log(p_vector, d_int);
  transformed_param_vector = binomial_coefficient_log(d_vector, p_real);
  transformed_param_vector_array = binomial_coefficient_log(p_vector_array,
                                                            p_real);
  transformed_param_vector_array = binomial_coefficient_log(p_vector_array,
                                                            d_real);
  transformed_param_vector_array = binomial_coefficient_log(p_vector_array,
                                                            d_int);
  transformed_param_vector_array = binomial_coefficient_log(d_vector_array,
                                                            p_real);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_vector_array_2d,
                                                               p_real);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_vector_array_2d,
                                                               d_real);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_vector_array_2d,
                                                               d_int);
  transformed_param_vector_array_2d = binomial_coefficient_log(d_vector_array_2d,
                                                               p_real);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_vector_array_3d,
                                                               p_real);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_vector_array_3d,
                                                               d_real);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_vector_array_3d,
                                                               d_int);
  transformed_param_vector_array_3d = binomial_coefficient_log(d_vector_array_3d,
                                                               p_real);
  
  transformed_param_vector = binomial_coefficient_log(p_real, p_vector);
  transformed_param_vector = binomial_coefficient_log(p_real, d_vector);
  transformed_param_vector = binomial_coefficient_log(d_real, p_vector);
  transformed_param_vector = binomial_coefficient_log(d_int, p_vector);
  transformed_param_vector_array = binomial_coefficient_log(p_real,
                                                            p_vector_array);
  transformed_param_vector_array = binomial_coefficient_log(p_real,
                                                            d_vector_array);
  transformed_param_vector_array = binomial_coefficient_log(d_real,
                                                            p_vector_array);
  transformed_param_vector_array = binomial_coefficient_log(d_int,
                                                            p_vector_array);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_real,
                                                               p_vector_array_2d);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_real,
                                                               d_vector_array_2d);
  transformed_param_vector_array_2d = binomial_coefficient_log(d_real,
                                                               p_vector_array_2d);
  transformed_param_vector_array_2d = binomial_coefficient_log(d_int,
                                                               p_vector_array_2d);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_real,
                                                               p_vector_array_3d);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_real,
                                                               d_vector_array_3d);
  transformed_param_vector_array_3d = binomial_coefficient_log(d_real,
                                                               p_vector_array_3d);
  transformed_param_vector_array_3d = binomial_coefficient_log(d_int,
                                                               p_vector_array_3d);
  
  transformed_param_vector = binomial_coefficient_log(p_vector, p_vector);
  transformed_param_vector = binomial_coefficient_log(p_vector, d_vector);
  transformed_param_vector = binomial_coefficient_log(d_vector, p_vector);
  transformed_param_vector_array = binomial_coefficient_log(p_vector_array,
                                                            p_vector_array);
  transformed_param_vector_array = binomial_coefficient_log(p_vector_array,
                                                            d_vector_array);
  transformed_param_vector_array = binomial_coefficient_log(d_vector_array,
                                                            p_vector_array);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_vector_array_2d,
                                                               p_vector_array_2d);
  transformed_param_vector_array_2d = binomial_coefficient_log(p_vector_array_2d,
                                                               d_vector_array_2d);
  transformed_param_vector_array_2d = binomial_coefficient_log(d_vector_array_2d,
                                                               p_vector_array_2d);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_vector_array_3d,
                                                               p_vector_array_3d);
  transformed_param_vector_array_3d = binomial_coefficient_log(p_vector_array_3d,
                                                               d_vector_array_3d);
  transformed_param_vector_array_3d = binomial_coefficient_log(d_vector_array_3d,
                                                               p_vector_array_3d);
  
  transformed_param_row_vector = binomial_coefficient_log(p_row_vector,
                                                          p_real);
  transformed_param_row_vector = binomial_coefficient_log(p_row_vector,
                                                          d_real);
  transformed_param_row_vector = binomial_coefficient_log(p_row_vector,
                                                          d_int);
  transformed_param_row_vector = binomial_coefficient_log(d_row_vector,
                                                          p_real);
  transformed_param_row_vector_array = binomial_coefficient_log(p_row_vector_array,
                                                                p_real);
  transformed_param_row_vector_array = binomial_coefficient_log(p_row_vector_array,
                                                                d_real);
  transformed_param_row_vector_array = binomial_coefficient_log(p_row_vector_array,
                                                                d_int);
  transformed_param_row_vector_array = binomial_coefficient_log(d_row_vector_array,
                                                                p_real);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_row_vector_array_2d,
                                                                   p_real);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_row_vector_array_2d,
                                                                   d_real);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_row_vector_array_2d,
                                                                   d_int);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(d_row_vector_array_2d,
                                                                   p_real);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_row_vector_array_3d,
                                                                   p_real);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_row_vector_array_3d,
                                                                   d_real);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_row_vector_array_3d,
                                                                   d_int);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(d_row_vector_array_3d,
                                                                   p_real);
  
  transformed_param_row_vector = binomial_coefficient_log(p_real,
                                                          p_row_vector);
  transformed_param_row_vector = binomial_coefficient_log(d_real,
                                                          p_row_vector);
  transformed_param_row_vector = binomial_coefficient_log(d_int,
                                                          p_row_vector);
  transformed_param_row_vector = binomial_coefficient_log(p_real,
                                                          d_row_vector);
  transformed_param_row_vector_array = binomial_coefficient_log(p_real,
                                                                p_row_vector_array);
  transformed_param_row_vector_array = binomial_coefficient_log(d_real,
                                                                p_row_vector_array);
  transformed_param_row_vector_array = binomial_coefficient_log(d_int,
                                                                p_row_vector_array);
  transformed_param_row_vector_array = binomial_coefficient_log(p_real,
                                                                d_row_vector_array);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_real,
                                                                   p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(d_real,
                                                                   p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(d_int,
                                                                   p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_real,
                                                                   d_row_vector_array_2d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_real,
                                                                   p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(d_real,
                                                                   p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(d_int,
                                                                   p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_real,
                                                                   d_row_vector_array_3d);
  
  transformed_param_row_vector = binomial_coefficient_log(p_row_vector,
                                                          p_row_vector);
  transformed_param_row_vector = binomial_coefficient_log(p_row_vector,
                                                          d_row_vector);
  transformed_param_row_vector = binomial_coefficient_log(d_row_vector,
                                                          p_row_vector);
  transformed_param_row_vector_array = binomial_coefficient_log(p_row_vector_array,
                                                                p_row_vector_array);
  transformed_param_row_vector_array = binomial_coefficient_log(p_row_vector_array,
                                                                d_row_vector_array);
  transformed_param_row_vector_array = binomial_coefficient_log(d_row_vector_array,
                                                                p_row_vector_array);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_row_vector_array_2d,
                                                                   p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(p_row_vector_array_2d,
                                                                   d_row_vector_array_2d);
  transformed_param_row_vector_array_2d = binomial_coefficient_log(d_row_vector_array_2d,
                                                                   p_row_vector_array_2d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_row_vector_array_3d,
                                                                   p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(p_row_vector_array_3d,
                                                                   d_row_vector_array_3d);
  transformed_param_row_vector_array_3d = binomial_coefficient_log(d_row_vector_array_3d,
                                                                   p_row_vector_array_3d);
  
  transformed_param_matrix = binomial_coefficient_log(p_matrix, p_real);
  transformed_param_matrix = binomial_coefficient_log(p_matrix, d_real);
  transformed_param_matrix = binomial_coefficient_log(p_matrix, d_int);
  transformed_param_matrix = binomial_coefficient_log(d_matrix, p_real);
  transformed_param_matrix_array = binomial_coefficient_log(p_matrix_array,
                                                            p_real);
  transformed_param_matrix_array = binomial_coefficient_log(p_matrix_array,
                                                            d_real);
  transformed_param_matrix_array = binomial_coefficient_log(p_matrix_array,
                                                            d_int);
  transformed_param_matrix_array = binomial_coefficient_log(d_matrix_array,
                                                            p_real);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_matrix_array_2d,
                                                               p_real);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_matrix_array_2d,
                                                               d_real);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_matrix_array_2d,
                                                               d_int);
  transformed_param_matrix_array_2d = binomial_coefficient_log(d_matrix_array_2d,
                                                               p_real);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_matrix_array_3d,
                                                               p_real);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_matrix_array_3d,
                                                               d_real);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_matrix_array_3d,
                                                               d_int);
  transformed_param_matrix_array_3d = binomial_coefficient_log(d_matrix_array_3d,
                                                               p_real);
  
  transformed_param_matrix = binomial_coefficient_log(p_real, p_matrix);
  transformed_param_matrix = binomial_coefficient_log(p_real, d_matrix);
  transformed_param_matrix = binomial_coefficient_log(d_real, p_matrix);
  transformed_param_matrix = binomial_coefficient_log(d_int, p_matrix);
  transformed_param_matrix_array = binomial_coefficient_log(p_real,
                                                            p_matrix_array);
  transformed_param_matrix_array = binomial_coefficient_log(p_real,
                                                            d_matrix_array);
  transformed_param_matrix_array = binomial_coefficient_log(d_real,
                                                            p_matrix_array);
  transformed_param_matrix_array = binomial_coefficient_log(d_int,
                                                            p_matrix_array);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_real,
                                                               p_matrix_array_2d);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_real,
                                                               d_matrix_array_2d);
  transformed_param_matrix_array_2d = binomial_coefficient_log(d_real,
                                                               p_matrix_array_2d);
  transformed_param_matrix_array_2d = binomial_coefficient_log(d_int,
                                                               p_matrix_array_2d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_real,
                                                               p_matrix_array_3d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_real,
                                                               d_matrix_array_3d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(d_real,
                                                               p_matrix_array_3d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(d_int,
                                                               p_matrix_array_3d);
  
  transformed_param_matrix = binomial_coefficient_log(p_matrix, p_matrix);
  transformed_param_matrix = binomial_coefficient_log(p_matrix, d_matrix);
  transformed_param_matrix = binomial_coefficient_log(d_matrix, p_matrix);
  transformed_param_matrix_array = binomial_coefficient_log(p_matrix_array,
                                                            p_matrix_array);
  transformed_param_matrix_array = binomial_coefficient_log(p_matrix_array,
                                                            d_matrix_array);
  transformed_param_matrix_array = binomial_coefficient_log(d_matrix_array,
                                                            p_matrix_array);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_matrix_array_2d,
                                                               p_matrix_array_2d);
  transformed_param_matrix_array_2d = binomial_coefficient_log(p_matrix_array_2d,
                                                               d_matrix_array_2d);
  transformed_param_matrix_array_2d = binomial_coefficient_log(d_matrix_array_2d,
                                                               p_matrix_array_2d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_matrix_array_3d,
                                                               p_matrix_array_3d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(p_matrix_array_3d,
                                                               d_matrix_array_3d);
  transformed_param_matrix_array_3d = binomial_coefficient_log(d_matrix_array_3d,
                                                               p_matrix_array_3d);
}
model {
  y_p ~ normal(0, 1);
}

Warning in 'binomial_coefficient_log.stan', line 41, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 42, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 43, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 44, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 45, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 46, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 48, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 49, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 50, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 51, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 52, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 53, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 55, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 56, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 57, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 58, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 59, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 60, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 62, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 63, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 64, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 65, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 66, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 67, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 69, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 70, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 71, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 72, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 73, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 74, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 76, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 77, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 78, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 79, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 80, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 81, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 82, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 83, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 85, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 86, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 87, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 88, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 89, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 90, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 91, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 92, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 94, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 95, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 96, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 97, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 99, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 100, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 101, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 102, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 103, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 104, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 105, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 106, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 108, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 109, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 110, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 111, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 112, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 113, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 114, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 115, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 117, column 32: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 118, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 119, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 120, column 41: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 122, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 123, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 124, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 125, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 126, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 127, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 128, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 129, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 131, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 132, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 133, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 134, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 135, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 136, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 137, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 138, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 140, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 141, column 34: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 142, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 143, column 37: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 181, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 182, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 183, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 185, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 186, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 187, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 189, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 190, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 191, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 192, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 193, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 194, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 195, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 196, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 197, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 198, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 199, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 200, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 202, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 203, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 204, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 205, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 206, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 207, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 208, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 209, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 210, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 211, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 212, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 213, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 215, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 216, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 217, column 28: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 218, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 219, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 220, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 221, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 222, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 223, column 31: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 225, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 226, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 227, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 228, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 229, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 230, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 231, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 232, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 233, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 234, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 235, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 236, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 237, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 238, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 239, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 240, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 242, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 243, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 244, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 245, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 246, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 247, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 248, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 249, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 250, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 251, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 252, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 253, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 254, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 255, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 256, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 257, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 259, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 260, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 261, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 262, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 263, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 264, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 265, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 266, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 267, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 268, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 269, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 270, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 272, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 273, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 274, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 275, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 276, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 277, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 278, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 279, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 280, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 281, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 282, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 283, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 284, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 285, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 286, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 287, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 289, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 290, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 291, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 292, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 293, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 294, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 295, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 296, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 297, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 298, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 299, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 300, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 301, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 302, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 303, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 304, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 306, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 307, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 308, column 33: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 309, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 310, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 311, column 39: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 312, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 313, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 314, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 315, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 316, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 317, column 42: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 319, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 320, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 321, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 322, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 323, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 324, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 325, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 326, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 327, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 328, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 329, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 330, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 331, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 332, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 333, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 334, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 336, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 337, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 338, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 339, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 340, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 341, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 342, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 343, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 344, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 345, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 346, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 347, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 348, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 349, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 350, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 351, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 353, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 354, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 355, column 29: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 356, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 357, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 358, column 35: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 359, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 360, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 361, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 362, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 363, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'binomial_coefficient_log.stan', line 364, column 38: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format cov_exp_quad.stan
data {
  int d_int_1;
  int d_int_2;
  int K;
  real d_sigma;
  real d_len;
  array[d_int_1] real d_arr_1;
  array[d_int_2] real d_arr_2;
  array[d_int_1] vector[K] d_vec_1;
  array[d_int_2] vector[K] d_vec_2;
  array[d_int_1] row_vector[K] d_rvec_1;
  array[d_int_2] row_vector[K] d_rvec_2;
}
transformed data {
  matrix[d_int_1, d_int_1] transformed_data_matrix;
  
  transformed_data_matrix = cov_exp_quad(d_arr_1, d_sigma, d_len);
  transformed_data_matrix = cov_exp_quad(d_arr_1, d_arr_2, d_sigma, d_len);
  transformed_data_matrix = cov_exp_quad(d_vec_1, d_sigma, d_len);
  transformed_data_matrix = cov_exp_quad(d_vec_1, d_vec_2, d_sigma, d_len);
  transformed_data_matrix = cov_exp_quad(d_rvec_1, d_sigma, d_len);
  transformed_data_matrix = cov_exp_quad(d_rvec_1, d_rvec_2, d_sigma, d_len);
}
parameters {
  real y_p;
  real p_sigma;
  real p_len;
  array[d_int_1] real p_arr_1;
  array[d_int_2] real p_arr_2;
  array[d_int_1] vector[K] p_vec_1;
  array[d_int_2] vector[K] p_vec_2;
  array[d_int_1] row_vector[K] p_rvec_1;
  array[d_int_2] row_vector[K] p_rvec_2;
}
transformed parameters {
  matrix[d_int_1, d_int_1] transformed_param_matrix;
  
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_arr_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_arr_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_arr_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, p_arr_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_arr_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_arr_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_arr_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_arr_1, d_arr_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_arr_1, d_arr_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, d_arr_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, d_arr_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, d_arr_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_arr_1, p_arr_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, p_arr_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, p_arr_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(d_arr_1, p_arr_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_vec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_vec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_vec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, p_vec_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_vec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_vec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_vec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_vec_1, d_vec_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_vec_1, d_vec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_vec_1, d_vec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_vec_1, d_vec_2, p_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_vec_1, p_vec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_vec_1, p_vec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_vec_1, p_vec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(d_vec_1, p_vec_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_rvec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_rvec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_rvec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, p_rvec_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_rvec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_rvec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_rvec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(p_rvec_1, d_rvec_2, d_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_rvec_1, d_rvec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_rvec_1, d_rvec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_rvec_1, d_rvec_2, p_sigma, d_len);
  
  transformed_param_matrix = cov_exp_quad(d_rvec_1, p_rvec_2, p_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_rvec_1, p_rvec_2, d_sigma, p_len);
  transformed_param_matrix = cov_exp_quad(d_rvec_1, p_rvec_2, p_sigma, d_len);
  transformed_param_matrix = cov_exp_quad(d_rvec_1, p_rvec_2, d_sigma, d_len);
}
model {
  y_p ~ normal(0, 1);
}

Warning in 'cov_exp_quad.stan', line 17, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 18, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 19, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 20, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 21, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 22, column 28: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 38, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 39, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 40, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 41, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 43, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 44, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 45, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 46, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 48, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 49, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 50, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 51, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 53, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 54, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 55, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 56, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 58, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 59, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 60, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 61, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 63, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 64, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 65, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 66, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 68, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 69, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 70, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 71, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 73, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 74, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 75, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 76, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 78, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 79, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 80, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 82, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 83, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 84, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 85, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 87, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 88, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 89, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 90, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 92, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 93, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 94, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 95, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 97, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 98, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 99, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 100, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 102, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 103, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 104, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 106, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 107, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 108, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
Warning in 'cov_exp_quad.stan', line 109, column 29: cov_exp_quad is
    deprecated and will be removed in Stan 2.32.0. Use gp_exp_quad_cov
    instead. This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format declarations.stan
data {
  int a0;
  array[1] int a1;
  array[2, 3] int a2;
  array[1] int a3;
  array[2, 3] int a4;
  
  real b0;
  array[4] real b1;
  array[5, 6] real b2;
  array[4] real b3;
  array[5, 6] real b4;
  
  vector[7] c0;
  array[8] vector[7] c1;
  array[8, 9] vector[7] c2;
  array[8] vector[7] c3;
  array[8, 9] vector[7] c4;
  
  row_vector[7] d0;
  array[8] row_vector[7] d1;
  array[8, 9] row_vector[7] d2;
  array[8] row_vector[7] d3;
  array[8, 9] row_vector[7] d4;
  
  matrix[8, 9] e;
  array[11] matrix[8, 9] e1;
  array[11, 12] matrix[8, 9] e2;
  array[11] matrix[8, 9] e3;
  array[11, 12] matrix[8, 9] e4;
  
  simplex[8] f;
  array[9] simplex[8] f1;
  array[9, 10] simplex[8] f2;
  array[9] simplex[8] f3;
  array[9, 10] simplex[8] f4;
  
  ordered[9] g;
  array[11] ordered[9] g1;
  array[12, 13] ordered[9] g2;
  array[11] ordered[9] g3;
  array[12, 13] ordered[9] g4;
  
  positive_ordered[9] h;
  array[11] positive_ordered[9] h1;
  array[12, 13] positive_ordered[9] h2;
  array[11] positive_ordered[9] h3;
  array[12, 13] positive_ordered[9] h4;
  
  corr_matrix[10] j;
  array[3] corr_matrix[10] j1;
  array[5, 6] corr_matrix[10] j2;
  array[3] corr_matrix[10] j3;
  array[5, 6] corr_matrix[10] j4;
  
  cov_matrix[10] k;
  array[3] cov_matrix[10] k1;
  array[5, 6] cov_matrix[10] k2;
  array[3] cov_matrix[10] k3;
  array[5, 6] cov_matrix[10] k4;
}
transformed data {
  int td_a0;
  array[1] int td_a1;
  array[2, 3] int td_a2;
  array[1] int td_a3;
  array[2, 3] int td_a4;
  
  real td_b0;
  array[4] real td_b1;
  array[5, 6] real td_b2;
  array[4] real td_b3;
  array[5, 6] real td_b4;
  
  vector[7] td_c0;
  array[8] vector[7] td_c1;
  array[8, 9] vector[7] td_c2;
  array[8] vector[7] td_c3;
  array[8, 9] vector[7] td_c4;
  
  row_vector[7] td_d0;
  array[8] row_vector[7] td_d1;
  array[8, 9] row_vector[7] td_d2;
  array[8] row_vector[7] td_d3;
  array[8, 9] row_vector[7] td_d4;
  
  matrix[8, 9] td_e;
  array[11] matrix[8, 9] td_e1;
  array[11, 12] matrix[8, 9] td_e2;
  array[11] matrix[8, 9] td_e3;
  array[11, 12] matrix[8, 9] td_e4;
  
  simplex[8] td_f;
  array[9] simplex[8] td_f1;
  array[9, 10] simplex[8] td_f2;
  array[9] simplex[8] td_f3;
  array[9, 10] simplex[8] td_f4;
  
  ordered[9] td_g;
  array[11] ordered[9] td_g1;
  array[12, 13] ordered[9] td_g2;
  array[11] ordered[9] td_g3;
  array[12, 13] ordered[9] td_g4;
  
  positive_ordered[9] td_h;
  array[11] positive_ordered[9] td_h1;
  array[12, 13] positive_ordered[9] td_h2;
  array[11] positive_ordered[9] td_h3;
  array[12, 13] positive_ordered[9] td_h4;
  
  corr_matrix[10] td_j;
  array[3] corr_matrix[10] td_j1;
  array[5, 6] corr_matrix[10] td_j2;
  array[3] corr_matrix[10] td_j3;
  array[5, 6] corr_matrix[10] td_j4;
  
  cov_matrix[10] td_k;
  array[3] cov_matrix[10] td_k1;
  array[5, 6] cov_matrix[10] td_k2;
  array[3] cov_matrix[10] td_k3;
  array[5, 6] cov_matrix[10] td_k4;
  
  {
    int loc_td_a0;
    array[1] int loc_td_a1;
    array[2, 3] int loc_td_a2;
    array[1] int loc_td_a3;
    array[2, 3] int loc_td_a4;
    
    real loc_td_b0;
    array[4] real loc_td_b1;
    array[5, 6] real loc_td_b2;
    array[4] real loc_td_b3;
    array[5, 6] real loc_td_b4;
    
    vector[7] loc_td_c0;
    array[8] vector[7] loc_td_c1;
    array[8, 9] vector[7] loc_td_c2;
    array[8] vector[7] loc_td_c3;
    array[8, 9] vector[7] loc_td_c4;
    
    row_vector[7] loc_td_d0;
    array[8] row_vector[7] loc_td_d1;
    array[8, 9] row_vector[7] loc_td_d2;
    array[8] row_vector[7] loc_td_d3;
    array[8, 9] row_vector[7] loc_td_d4;
    
    matrix[8, 9] loc_td_e;
    array[11] matrix[8, 9] loc_td_e1;
    array[11, 12] matrix[8, 9] loc_td_e2;
    array[11] matrix[8, 9] loc_td_e3;
    array[11, 12] matrix[8, 9] loc_td_e4;
  }
}
parameters {
  real par_b0;
  array[4] real par_b1;
  array[5, 6] real par_b2;
  array[4] real par_b3;
  array[5, 6] real par_b4;
  
  vector[7] par_c0;
  array[8] vector[7] par_c1;
  array[8, 9] vector[7] par_c2;
  array[8] vector[7] par_c3;
  array[8, 9] vector[7] par_c4;
  
  row_vector[7] par_d0;
  array[8] row_vector[7] par_d1;
  array[8, 9] row_vector[7] par_d2;
  array[8] row_vector[7] par_d3;
  array[8, 9] row_vector[7] par_d4;
  
  matrix[8, 9] par_e;
  array[11] matrix[8, 9] par_e1;
  array[11, 12] matrix[8, 9] par_e2;
  array[11] matrix[8, 9] par_e3;
  array[11, 12] matrix[8, 9] par_e4;
  
  simplex[8] par_f;
  array[9] simplex[8] par_f1;
  array[9, 10] simplex[8] par_f2;
  array[9] simplex[8] par_f3;
  array[9, 10] simplex[8] par_f4;
  
  ordered[9] par_g;
  array[11] ordered[9] par_g1;
  array[12, 13] ordered[9] par_g2;
  array[11] ordered[9] par_g3;
  array[12, 13] ordered[9] par_g4;
  
  positive_ordered[9] par_h;
  array[11] positive_ordered[9] par_h1;
  array[12, 13] positive_ordered[9] par_h2;
  array[11] positive_ordered[9] par_h3;
  array[12, 13] positive_ordered[9] par_h4;
  
  corr_matrix[10] par_j;
  array[3] corr_matrix[10] par_j1;
  array[5, 6] corr_matrix[10] par_j2;
  array[3] corr_matrix[10] par_j3;
  array[5, 6] corr_matrix[10] par_j4;
  
  cov_matrix[10] par_k;
  array[3] cov_matrix[10] par_k1;
  array[5, 6] cov_matrix[10] par_k2;
  array[3] cov_matrix[10] par_k3;
  array[5, 6] cov_matrix[10] par_k4;
}
transformed parameters {
  real tpar_b0;
  array[4] real tpar_b1;
  array[5, 6] real tpar_b2;
  array[4] real tpar_b3;
  array[5, 6] real tpar_b4;
  
  vector[7] tpar_c0;
  array[8] vector[7] tpar_c1;
  array[8, 9] vector[7] tpar_c2;
  array[8] vector[7] tpar_c3;
  array[8, 9] vector[7] tpar_c4;
  
  row_vector[7] tpar_d0;
  array[8] row_vector[7] tpar_d1;
  array[8, 9] row_vector[7] tpar_d2;
  array[8] row_vector[7] tpar_d3;
  array[8, 9] row_vector[7] tpar_d4;
  
  matrix[8, 9] tpar_e;
  array[11] matrix[8, 9] tpar_e1;
  array[11, 12] matrix[8, 9] tpar_e2;
  array[11] matrix[8, 9] tpar_e3;
  array[11, 12] matrix[8, 9] tpar_e4;
  
  simplex[8] tpar_f;
  array[9] simplex[8] tpar_f1;
  array[9, 10] simplex[8] tpar_f2;
  array[9] simplex[8] tpar_f3;
  array[9, 10] simplex[8] tpar_f4;
  
  ordered[9] tpar_g;
  array[11] ordered[9] tpar_g1;
  array[12, 13] ordered[9] tpar_g2;
  array[11] ordered[9] tpar_g3;
  array[12, 13] ordered[9] tpar_g4;
  
  positive_ordered[9] tpar_h;
  array[11] positive_ordered[9] tpar_h1;
  array[12, 13] positive_ordered[9] tpar_h2;
  array[11] positive_ordered[9] tpar_h3;
  array[12, 13] positive_ordered[9] tpar_h4;
  
  corr_matrix[10] tpar_j;
  array[3] corr_matrix[10] tpar_j1;
  array[5, 6] corr_matrix[10] tpar_j2;
  array[3] corr_matrix[10] tpar_j3;
  array[5, 6] corr_matrix[10] tpar_j4;
  
  cov_matrix[10] tpar_k;
  array[3] cov_matrix[10] tpar_k1;
  array[5, 6] cov_matrix[10] tpar_k2;
  array[3] cov_matrix[10] tpar_k3;
  array[5, 6] cov_matrix[10] tpar_k4;
  
  {
    int loc_tpar_a0;
    array[1] int loc_tpar_a1;
    array[2, 3] int loc_tpar_a2;
    array[1] int loc_tpar_a3;
    array[2, 3] int loc_tpar_a4;
    
    real loc_tpar_b0;
    array[4] real loc_tpar_b1;
    array[5, 6] real loc_tpar_b2;
    array[4] real loc_tpar_b3;
    array[5, 6] real loc_tpar_b4;
    
    vector[7] loc_tpar_c0;
    array[8] vector[7] loc_tpar_c1;
    array[8, 9] vector[7] loc_tpar_c2;
    array[8] vector[7] loc_tpar_c3;
    array[8, 9] vector[7] loc_tpar_c4;
    
    row_vector[7] loc_tpar_d0;
    array[8] row_vector[7] loc_tpar_d1;
    array[8, 9] row_vector[7] loc_tpar_d2;
    array[8] row_vector[7] loc_tpar_d3;
    array[8, 9] row_vector[7] loc_tpar_d4;
    
    matrix[8, 9] loc_tpar_e;
    array[11] matrix[8, 9] loc_tpar_e1;
    array[11, 12] matrix[8, 9] loc_tpar_e2;
    array[11] matrix[8, 9] loc_tpar_e3;
    array[11, 12] matrix[8, 9] loc_tpar_e4;
  }
}
model {
  {
    int loc_model_a0;
    array[1] int loc_model_a1;
    array[2, 3] int loc_model_a2;
    array[1] int loc_model_a3;
    array[2, 3] int loc_model_a4;
    
    real loc_model_b0;
    array[4] real loc_model_b1;
    array[5, 6] real loc_model_b2;
    array[4] real loc_model_b3;
    array[5, 6] real loc_model_b4;
    
    vector[7] loc_model_c0;
    array[8] vector[7] loc_model_c1;
    array[8, 9] vector[7] loc_model_c2;
    array[8] vector[7] loc_model_c3;
    array[8, 9] vector[7] loc_model_c4;
    
    row_vector[7] loc_model_d0;
    array[8] row_vector[7] loc_model_d1;
    array[8, 9] row_vector[7] loc_model_d2;
    array[8] row_vector[7] loc_model_d3;
    array[8, 9] row_vector[7] loc_model_d4;
    
    matrix[8, 9] loc_model_e;
    array[11] matrix[8, 9] loc_model_e1;
    array[11, 12] matrix[8, 9] loc_model_e2;
    array[11] matrix[8, 9] loc_model_e3;
    array[11, 12] matrix[8, 9] loc_model_e4;
  }
}
generated quantities {
  real gq_b0;
  array[4] real gq_b1;
  array[5, 6] real gq_b2;
  array[4] real gq_b3;
  array[5, 6] real gq_b4;
  
  vector[7] gq_c0;
  array[8] vector[7] gq_c1;
  array[8, 9] vector[7] gq_c2;
  array[8] vector[7] gq_c3;
  array[8, 9] vector[7] gq_c4;
  
  row_vector[7] gq_d0;
  array[8] row_vector[7] gq_d1;
  array[8, 9] row_vector[7] gq_d2;
  array[8] row_vector[7] gq_d3;
  array[8, 9] row_vector[7] gq_d4;
  
  matrix[8, 9] gq_e;
  array[11] matrix[8, 9] gq_e1;
  array[11, 12] matrix[8, 9] gq_e2;
  array[11] matrix[8, 9] gq_e3;
  array[11, 12] matrix[8, 9] gq_e4;
  
  simplex[8] gq_f;
  array[9] simplex[8] gq_f1;
  array[9, 10] simplex[8] gq_f2;
  array[9] simplex[8] gq_f3;
  array[9, 10] simplex[8] gq_f4;
  
  ordered[9] gq_g;
  array[11] ordered[9] gq_g1;
  array[12, 13] ordered[9] gq_g2;
  array[11] ordered[9] gq_g3;
  array[12, 13] ordered[9] gq_g4;
  
  positive_ordered[9] gq_h;
  array[11] positive_ordered[9] gq_h1;
  array[12, 13] positive_ordered[9] gq_h2;
  array[11] positive_ordered[9] gq_h3;
  array[12, 13] positive_ordered[9] gq_h4;
  
  corr_matrix[10] gq_j;
  array[3] corr_matrix[10] gq_j1;
  array[5, 6] corr_matrix[10] gq_j2;
  array[3] corr_matrix[10] gq_j3;
  array[5, 6] corr_matrix[10] gq_j4;
  
  cov_matrix[10] gq_k;
  array[3] cov_matrix[10] gq_k1;
  array[5, 6] cov_matrix[10] gq_k2;
  array[3] cov_matrix[10] gq_k3;
  array[5, 6] cov_matrix[10] gq_k4;
  
  {
    int loc_gq_a0;
    array[1] int loc_gq_a1;
    array[2, 3] int loc_gq_a2;
    array[1] int loc_gq_a3;
    array[2, 3] int loc_gq_a4;
    
    real loc_gq_b0;
    array[4] real loc_gq_b1;
    array[5, 6] real loc_gq_b2;
    array[4] real loc_gq_b3;
    array[5, 6] real loc_gq_b4;
    
    vector[7] loc_gq_c0;
    array[8] vector[7] loc_gq_c1;
    array[8, 9] vector[7] loc_gq_c2;
    array[8] vector[7] loc_gq_c3;
    array[8, 9] vector[7] loc_gq_c4;
    
    row_vector[7] loc_gq_d0;
    array[8] row_vector[7] loc_gq_d1;
    array[8, 9] row_vector[7] loc_gq_d2;
    array[8] row_vector[7] loc_gq_d3;
    array[8, 9] row_vector[7] loc_gq_d4;
    
    matrix[8, 9] loc_gq_e;
    array[11] matrix[8, 9] loc_gq_e1;
    array[11, 12] matrix[8, 9] loc_gq_e2;
    array[11] matrix[8, 9] loc_gq_e3;
    array[11, 12] matrix[8, 9] loc_gq_e4;
  }
}

  $ ../../../../../install/default/bin/stanc --auto-format deprecated_syntax.stan
functions {
  real foo_log(real alpha, real beta) {
    return 1.0;
  }
  
  real foo_t_log(real alpha, real beta) {
    return 1.0;
  }
}
data {
  real a;
  vector[3] b;
  array[7] real c;
  array[8, 9] real d;
}
parameters {
  real y;
  real e;
  vector[3] f;
  array[7] real g;
  array[8, 9] real h;
}
model {
  // old distriubtion suffixes
  target += normal_log(y, 0, 1) + normal_cdf_log(2, 0, 1)
            + normal_ccdf_log(3, 0, 1);
  // increment log prob
  increment_log_prob(a);
  increment_log_prob(b);
  increment_log_prob(b);
  increment_log_prob(c);
  increment_log_prob(d);
  increment_log_prob(e);
  increment_log_prob(f);
  increment_log_prob(g);
  increment_log_prob(h);
  // cdf without |
  increment_log_prob(bernoulli_cdf(0, 1));
  // getlp
  real x = get_lp();
  // old array syntax
  array[5] real xyz;
  // future reserved words
  int offset;
  int array;
  // deprecated functions
  real z = multiply_log(3.4, 3.5);
  
  // old comment
  
  // old assign
  z <- 3;
  
  // _log UDFs
  target += foo_t_log(1, 3);
  1 ~ foo(3);
}

Warning in 'deprecated_syntax.stan', line 30, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 31, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 32, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 33, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 34, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 35, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 36, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 37, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 38, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 40, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 42, column 11: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 46, column 6: Variable name
    'offset' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'deprecated_syntax.stan', line 47, column 6: Variable name 'array'
    will be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'deprecated_syntax.stan', line 51, column 2: Comments beginning
    with # are deprecated and this syntax will be removed in Stan 2.32.0. Use
    // to begin line comments; this can be done automatically using stanc
    --auto-format
Warning in 'deprecated_syntax.stan', line 54, column 4: assignment operator
    <- is deprecated in the Stan language and will be removed in Stan 2.32.0;
    use = instead. This can be done automatically with stanc
    --print-canonical
Warning in 'deprecated_syntax.stan', line 2, column 9: Use of the _log suffix
    in user defined probability functions is deprecated and will be removed
    in Stan 2.32.0, use name 'foo_lpdf' instead if you intend on using this
    function in ~ statements or calling unnormalized probability functions
    inside of it.
Warning in 'deprecated_syntax.stan', line 6, column 8: Use of the _log suffix
    in user defined probability functions is deprecated and will be removed
    in Stan 2.32.0, use name 'foo_t_lpdf' instead if you intend on using this
    function in ~ statements or calling unnormalized probability functions
    inside of it.
Warning in 'deprecated_syntax.stan', line 26, column 12: normal_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lpdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 27, column 6: normal_cdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lcdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 28, column 6: normal_ccdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lccdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 40, column 21: Use of bernoulli_cdf
    without a vertical bar (|) between the first two arguments of a CDF is
    deprecated and will be removed in Stan 2.32.0. This can be automatically
    changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 49, column 11: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format duplicate-warns.stan
model {
  real foo;
  foo = 1;
  increment_log_prob(0);
  foo = get_lp();
  foo = multiply_log(1, 1);
  foo = binomial_coefficient_log(1, 1);
  // deprecated distribution functions versions
  foo = normal_log(0.5, 0, 1);
  foo = normal_cdf_log(0.5, 0, 1);
  foo = normal_ccdf_log(0.5, 0, 1);
}

Warning in 'duplicate-warns.stan', line 4, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'duplicate-warns.stan', line 5, column 8: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
Warning in 'duplicate-warns.stan', line 6, column 8: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 7, column 8: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 9, column 8: normal_log is deprecated
    and will be removed in Stan 2.32.0. Use normal_lpdf instead. This can be
    automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 10, column 8: normal_cdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lcdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 11, column 8: normal_ccdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lccdf instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format empty.stan

Warning: Empty file 'empty.stan' detected; this is a valid stan model but
    likely unintended!
  $ ../../../../../install/default/bin/stanc --auto-format get-lp-deprecate.stan
parameters {
  real<lower=0> y;
}
model {
  print("target=", get_lp());
  y ~ normal(0, 1);
}

Warning in 'get-lp-deprecate.stan', line 5, column 19: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format get_lp_target.stan
parameters {
  real<lower=0> y;
}
transformed parameters {
  print("target = ", target());
  print("get_lp = ", get_lp());
}
model {
  print("target = ", target());
  print("get_lp = ", get_lp());
  y ~ normal(0, 1);
}

Warning in 'get_lp_target.stan', line 6, column 21: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
Warning in 'get_lp_target.stan', line 10, column 21: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format identifiers.stan
data {
  int upper;
  int lower;
  int multiplier;
  int offset;
}

Warning in 'identifiers.stan', line 2, column 6: Variable name 'upper' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 3, column 6: Variable name 'lower' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 4, column 6: Variable name 'multiplier'
    will be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 5, column 6: Variable name 'offset' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
  $ ../../../../../install/default/bin/stanc --auto-format increment_log_prob.stan
transformed data {
  int n;
  array[2] int nn;
  array[3, 4] int nnn;
  
  real x;
  array[5] real xx;
  array[6, 7] real xxx;
  array[8, 9, 10] real xxxx;
  
  vector[2] v;
  array[4] vector[3] vv;
  array[5, 6] vector[4] vvv;
  
  row_vector[2] rv;
  array[4] row_vector[3] rvv;
  array[5, 6] row_vector[4] rvvv;
  
  matrix[7, 8] m;
  array[2] matrix[7, 8] mm;
  array[3, 4] matrix[7, 8] mmm;
}
parameters {
  real p_x;
  array[5] real p_xx;
  array[6, 7] real p_xxx;
  array[8, 9, 10] real p_xxxx;
  
  vector[2] p_v;
  array[4] vector[3] p_vv;
  array[5, 6] vector[4] p_vvv;
  
  row_vector[2] p_rv;
  array[4] row_vector[3] p_rvv;
  array[5, 6] row_vector[4] p_rvvv;
  
  matrix[7, 8] p_m;
  array[2] matrix[7, 8] p_mm;
  array[3, 4] matrix[7, 8] p_mmm;
}
model {
  increment_log_prob(n);
  increment_log_prob(nn);
  increment_log_prob(nnn);
  
  increment_log_prob(x);
  increment_log_prob(xx);
  increment_log_prob(xxx);
  increment_log_prob(xxxx);
  
  increment_log_prob(v);
  increment_log_prob(vv);
  increment_log_prob(vvv);
  
  increment_log_prob(rv);
  increment_log_prob(rvv);
  increment_log_prob(rvvv);
  
  increment_log_prob(m);
  increment_log_prob(mm);
  increment_log_prob(mmm);
  
  increment_log_prob(p_x);
  increment_log_prob(p_xx);
  increment_log_prob(p_xxx);
  increment_log_prob(p_xxxx);
  
  increment_log_prob(p_v);
  increment_log_prob(p_vv);
  increment_log_prob(p_vvv);
  
  increment_log_prob(p_rv);
  increment_log_prob(p_rvv);
  increment_log_prob(p_rvvv);
  
  increment_log_prob(p_m);
  increment_log_prob(p_mm);
  increment_log_prob(p_mmm);
}

Warning in 'increment_log_prob.stan', line 42, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 43, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 44, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 46, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 47, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 48, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 49, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 51, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 52, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 53, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 55, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 56, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 57, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 59, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 60, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 61, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 64, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 65, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 66, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 67, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 69, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 70, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 71, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 73, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 74, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 75, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 77, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 78, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 79, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format int_div_user.stan
data {
  array[4] int a;
  array[3] int b;
}
transformed data {
  int c;
  c = a[1] / b[2];
}
model {
  
}

Warning in 'int_div_user.stan', line 7, column 6: Found int division:
      a[1] / b[2]
    Values will be rounded towards zero. If rounding is not desired you can
    write
    the division as
      a[1] * 1.0 / b[2]
    If rounding is intended please use the integer division operator %/%.
  $ ../../../../../install/default/bin/stanc --auto-format integrate_1d_good.stan
functions {
  real foo(real x, real xc, array[] real theta, array[] real x_r,
           array[] int x_i) {
    return x ^ 2;
  }
}
data {
  array[2] real x_r;
  array[10] int x_i;
}
transformed data {
  array[3] real theta_d;
  real int_foo1 = integrate_1d(foo, 0.2, 1.3, theta_d, x_r, x_i, 0.01);
}
parameters {
  real lb;
  real ub;
  array[3] real theta;
}
model {
  real int_foo2 = integrate_1d(foo, 0.2, 1.3, theta, x_r, x_i, 0.01);
  real int_foo3 = integrate_1d(foo, lb, 1.3, theta, x_r, x_i, 0.01);
  real int_foo4 = integrate_1d(foo, 0.2, ub, theta, x_r, x_i, 0.01);
  real int_foo5 = integrate_1d(foo, lb, ub, theta, x_r, x_i, 0.01);
  real int_foo6 = integrate_1d(foo, 0.2, 1.3, theta_d, x_r, x_i, 0.01);
  real int_foo7 = integrate_1d(foo, lb, 1.3, theta_d, x_r, x_i, 0.01);
  real int_foo8 = integrate_1d(foo, 0.2, ub, theta_d, x_r, x_i, 0.01);
  real int_foo9 = integrate_1d(foo, lb, ub, theta_d, x_r, x_i, 0.01);
}

  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_adams.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
}

Warning in 'integrate_ode_adams.stan', line 28, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 29, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 30, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 32, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 33, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 34, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 38, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 39, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 40, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 41, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 43, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 44, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 45, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 46, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_bdf.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
}

Warning in 'integrate_ode_bdf.stan', line 28, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 29, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 30, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 31, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 33, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 34, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 35, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 36, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 40, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 41, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 42, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 43, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 45, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 46, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 47, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 48, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_deprecation.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0;
  real t0;
  array[T] real ts;
  array[1] real theta;
}
transformed data {
  array[0] real x;
  array[0] int x_int;
}
model {
  
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode(sho, y0, t0, ts, theta, x, x_int);
  
  // add measurement error
  for (t in 1 : T) {
    y_hat[t, 1] = y_hat[t, 1] + normal_rng(0, 0.1);
    y_hat[t, 2] = y_hat[t, 2] + normal_rng(0, 0.1);
  }
}

Warning in 'integrate_ode_deprecation.stan', line 28, column 10: integrate_ode
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_rk45.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_p, x, x_int);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_p, x, x_int);
}

Warning in 'integrate_ode_rk45.stan', line 28, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 29, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 30, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 31, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 35, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 36, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 37, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 38, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format lkj_cov_deprecation1.stan
parameters {
  cov_matrix[3] Sigma;
  vector[3] mu;
  vector[3] sigma;
  real<lower=0> eta;
}
model {
  Sigma ~ lkj_cov(mu, sigma, eta);
}

  $ ../../../../../install/default/bin/stanc --auto-format lkj_cov_deprecation2.stan
parameters {
  cov_matrix[3] Sigma;
  vector[3] mu;
  vector[3] sigma;
  real<lower=0> eta;
}
model {
  increment_log_prob(lkj_cov_log(Sigma, mu, sigma, eta));
}

Warning in 'lkj_cov_deprecation2.stan', line 8, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format matrix_pow_warning.stan
data {
  int<lower=0> N;
  matrix[N, N] A;
  int power;
}
transformed data {
  matrix[N, N] A_pow = A ^ power;
  matrix[N, N] A_pow_r = A ^ 3.5;
}

Warning in 'matrix_pow_warning.stan', line 8, column 23: Found matrix^scalar:
      A ^ power
    matrix ^ number is interpreted as element-wise exponentiation. If this
    is
    intended, you can silence this warning by using elementwise operator .^
    If you intended matrix exponentiation, use the
    function
    matrix_power(matrix,int) instead.
Warning in 'matrix_pow_warning.stan', line 9, column 25: Found matrix^scalar:
      A ^ 3.5
    matrix ^ number is interpreted as element-wise exponentiation. If this
    is
    intended, you can silence this warning by using elementwise operator .^
    If you intended matrix exponentiation, use the
    function
    matrix_power(matrix,int) instead.
  $ ../../../../../install/default/bin/stanc --auto-format multiply_log.stan
data {
  int d_int;
  array[d_int] int d_int_array;
  array[d_int, 2] int d_int_array_2d;
  array[d_int, 2, 3] int d_int_array_3d;
  real d_real;
  array[d_int] real d_real_array;
  array[d_int, 2] real d_real_array_2d;
  array[d_int, 2, 3] real d_real_array_3d;
  matrix[d_int, d_int] d_matrix;
  array[d_int] matrix[d_int, d_int] d_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] d_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] d_matrix_array_3d;
  vector[d_int] d_vector;
  array[d_int] vector[d_int] d_vector_array;
  array[d_int, 2] vector[d_int] d_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] d_vector_array_3d;
  row_vector[d_int] d_row_vector;
  array[d_int] row_vector[d_int] d_row_vector_array;
  array[d_int, 2] row_vector[d_int] d_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] d_row_vector_array_3d;
}
transformed data {
  real transformed_data_real;
  array[d_int] real transformed_data_real_array;
  array[d_int, 2] real transformed_data_real_array_2d;
  array[d_int, 2, 3] real transformed_data_real_array_3d;
  matrix[d_int, d_int] transformed_data_matrix;
  array[d_int] matrix[d_int, d_int] transformed_data_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] transformed_data_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] transformed_data_matrix_array_3d;
  vector[d_int] transformed_data_vector;
  array[d_int] vector[d_int] transformed_data_vector_array;
  array[d_int, 2] vector[d_int] transformed_data_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] transformed_data_vector_array_3d;
  row_vector[d_int] transformed_data_row_vector;
  array[d_int] row_vector[d_int] transformed_data_row_vector_array;
  array[d_int, 2] row_vector[d_int] transformed_data_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] transformed_data_row_vector_array_3d;
  
  transformed_data_real_array = multiply_log(d_int_array, d_int);
  transformed_data_real_array = multiply_log(d_int_array, d_real);
  transformed_data_real_array_2d = multiply_log(d_int_array_2d, d_int);
  transformed_data_real_array_2d = multiply_log(d_int_array_2d, d_real);
  transformed_data_real_array_3d = multiply_log(d_int_array_3d, d_int);
  transformed_data_real_array_3d = multiply_log(d_int_array_3d, d_real);
  
  transformed_data_real_array = multiply_log(d_int, d_int_array);
  transformed_data_real_array = multiply_log(d_real, d_int_array);
  transformed_data_real_array_2d = multiply_log(d_int, d_int_array_2d);
  transformed_data_real_array_2d = multiply_log(d_real, d_int_array_2d);
  transformed_data_real_array_3d = multiply_log(d_int, d_int_array_3d);
  transformed_data_real_array_3d = multiply_log(d_real, d_int_array_3d);
  
  transformed_data_real_array = multiply_log(d_int, d_real_array);
  transformed_data_real_array = multiply_log(d_real, d_real_array);
  transformed_data_real_array_2d = multiply_log(d_int, d_real_array_2d);
  transformed_data_real_array_2d = multiply_log(d_real, d_real_array_2d);
  transformed_data_real_array_3d = multiply_log(d_int, d_real_array_3d);
  transformed_data_real_array_3d = multiply_log(d_real, d_real_array_3d);
  
  transformed_data_real_array = multiply_log(d_real_array, d_int);
  transformed_data_real_array = multiply_log(d_real_array, d_real);
  transformed_data_real_array_2d = multiply_log(d_real_array_2d, d_int);
  transformed_data_real_array_2d = multiply_log(d_real_array_2d, d_real);
  transformed_data_real_array_3d = multiply_log(d_real_array_3d, d_int);
  transformed_data_real_array_3d = multiply_log(d_real_array_3d, d_real);
  
  transformed_data_real_array = multiply_log(d_int_array, d_int_array);
  transformed_data_real_array = multiply_log(d_real_array, d_real_array);
  transformed_data_real_array_2d = multiply_log(d_int_array_2d,
                                                d_int_array_2d);
  transformed_data_real_array_2d = multiply_log(d_real_array_2d,
                                                d_real_array_2d);
  transformed_data_real_array_3d = multiply_log(d_int_array_3d,
                                                d_int_array_3d);
  transformed_data_real_array_3d = multiply_log(d_real_array_3d,
                                                d_real_array_3d);
  
  transformed_data_vector = multiply_log(d_vector, d_int);
  transformed_data_vector = multiply_log(d_vector, d_real);
  transformed_data_vector_array = multiply_log(d_vector_array, d_int);
  transformed_data_vector_array = multiply_log(d_vector_array, d_real);
  transformed_data_vector_array_2d = multiply_log(d_vector_array_2d, d_int);
  transformed_data_vector_array_2d = multiply_log(d_vector_array_2d, d_real);
  transformed_data_vector_array_3d = multiply_log(d_vector_array_3d, d_int);
  transformed_data_vector_array_3d = multiply_log(d_vector_array_3d, d_real);
  
  transformed_data_vector = multiply_log(d_int, d_vector);
  transformed_data_vector = multiply_log(d_real, d_vector);
  transformed_data_vector_array = multiply_log(d_int, d_vector_array);
  transformed_data_vector_array = multiply_log(d_real, d_vector_array);
  transformed_data_vector_array_2d = multiply_log(d_int, d_vector_array_2d);
  transformed_data_vector_array_2d = multiply_log(d_real, d_vector_array_2d);
  transformed_data_vector_array_3d = multiply_log(d_int, d_vector_array_3d);
  transformed_data_vector_array_3d = multiply_log(d_real, d_vector_array_3d);
  
  transformed_data_vector = multiply_log(d_vector, d_vector);
  transformed_data_vector_array = multiply_log(d_vector_array,
                                               d_vector_array);
  transformed_data_vector_array_2d = multiply_log(d_vector_array_2d,
                                                  d_vector_array_2d);
  transformed_data_vector_array_3d = multiply_log(d_vector_array_3d,
                                                  d_vector_array_3d);
  
  transformed_data_row_vector = multiply_log(d_row_vector, d_int);
  transformed_data_row_vector = multiply_log(d_row_vector, d_real);
  transformed_data_row_vector_array = multiply_log(d_row_vector_array, d_int);
  transformed_data_row_vector_array = multiply_log(d_row_vector_array,
                                                   d_real);
  transformed_data_row_vector_array_2d = multiply_log(d_row_vector_array_2d,
                                                      d_int);
  transformed_data_row_vector_array_2d = multiply_log(d_row_vector_array_2d,
                                                      d_real);
  transformed_data_row_vector_array_3d = multiply_log(d_row_vector_array_3d,
                                                      d_int);
  transformed_data_row_vector_array_3d = multiply_log(d_row_vector_array_3d,
                                                      d_real);
  
  transformed_data_row_vector = multiply_log(d_int, d_row_vector);
  transformed_data_row_vector = multiply_log(d_real, d_row_vector);
  transformed_data_row_vector_array = multiply_log(d_int, d_row_vector_array);
  transformed_data_row_vector_array = multiply_log(d_real,
                                                   d_row_vector_array);
  transformed_data_row_vector_array_2d = multiply_log(d_int,
                                                      d_row_vector_array_2d);
  transformed_data_row_vector_array_2d = multiply_log(d_real,
                                                      d_row_vector_array_2d);
  transformed_data_row_vector_array_3d = multiply_log(d_int,
                                                      d_row_vector_array_3d);
  transformed_data_row_vector_array_3d = multiply_log(d_real,
                                                      d_row_vector_array_3d);
  
  transformed_data_row_vector = multiply_log(d_row_vector, d_row_vector);
  transformed_data_row_vector_array = multiply_log(d_row_vector_array,
                                                   d_row_vector_array);
  transformed_data_row_vector_array_2d = multiply_log(d_row_vector_array_2d,
                                                      d_row_vector_array_2d);
  transformed_data_row_vector_array_3d = multiply_log(d_row_vector_array_3d,
                                                      d_row_vector_array_3d);
  
  transformed_data_matrix = multiply_log(d_matrix, d_int);
  transformed_data_matrix = multiply_log(d_matrix, d_real);
  transformed_data_matrix_array = multiply_log(d_matrix_array, d_int);
  transformed_data_matrix_array = multiply_log(d_matrix_array, d_real);
  transformed_data_matrix_array_2d = multiply_log(d_matrix_array_2d, d_int);
  transformed_data_matrix_array_2d = multiply_log(d_matrix_array_2d, d_real);
  transformed_data_matrix_array_3d = multiply_log(d_matrix_array_3d, d_int);
  transformed_data_matrix_array_3d = multiply_log(d_matrix_array_3d, d_real);
  
  transformed_data_matrix = multiply_log(d_int, d_matrix);
  transformed_data_matrix = multiply_log(d_real, d_matrix);
  transformed_data_matrix_array = multiply_log(d_int, d_matrix_array);
  transformed_data_matrix_array = multiply_log(d_real, d_matrix_array);
  transformed_data_matrix_array_2d = multiply_log(d_int, d_matrix_array_2d);
  transformed_data_matrix_array_2d = multiply_log(d_real, d_matrix_array_2d);
  transformed_data_matrix_array_3d = multiply_log(d_int, d_matrix_array_3d);
  transformed_data_matrix_array_3d = multiply_log(d_real, d_matrix_array_3d);
  
  transformed_data_matrix = multiply_log(d_matrix, d_matrix);
  transformed_data_matrix_array = multiply_log(d_matrix_array,
                                               d_matrix_array);
  transformed_data_matrix_array_2d = multiply_log(d_matrix_array_2d,
                                                  d_matrix_array_2d);
  transformed_data_matrix_array_3d = multiply_log(d_matrix_array_3d,
                                                  d_matrix_array_3d);
}
parameters {
  real p_real;
  array[d_int] real p_real_array;
  array[d_int, 2] real p_real_array_2d;
  array[d_int, 2, 3] real p_real_array_3d;
  matrix[d_int, d_int] p_matrix;
  array[d_int] matrix[d_int, d_int] p_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] p_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] p_matrix_array_3d;
  vector[d_int] p_vector;
  array[d_int] vector[d_int] p_vector_array;
  array[d_int, 2] vector[d_int] p_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] p_vector_array_3d;
  row_vector[d_int] p_row_vector;
  array[d_int] row_vector[d_int] p_row_vector_array;
  array[d_int, 2] row_vector[d_int] p_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] p_row_vector_array_3d;
  real y_p;
}
transformed parameters {
  array[d_int] real transformed_param_array;
  array[d_int, 2] real transformed_param_array_2d;
  array[d_int, 2, 3] real transformed_param_array_3d;
  matrix[d_int, d_int] transformed_param_matrix;
  array[d_int] matrix[d_int, d_int] transformed_param_matrix_array;
  array[d_int, 2] matrix[d_int, d_int] transformed_param_matrix_array_2d;
  array[d_int, 2, 3] matrix[d_int, d_int] transformed_param_matrix_array_3d;
  vector[d_int] transformed_param_vector;
  array[d_int] vector[d_int] transformed_param_vector_array;
  array[d_int, 2] vector[d_int] transformed_param_vector_array_2d;
  array[d_int, 2, 3] vector[d_int] transformed_param_vector_array_3d;
  row_vector[d_int] transformed_param_row_vector;
  array[d_int] row_vector[d_int] transformed_param_row_vector_array;
  array[d_int, 2] row_vector[d_int] transformed_param_row_vector_array_2d;
  array[d_int, 2, 3] row_vector[d_int] transformed_param_row_vector_array_3d;
  
  transformed_param_array = multiply_log(d_int_array, p_real);
  transformed_param_array_2d = multiply_log(d_int_array_2d, p_real);
  transformed_param_array_3d = multiply_log(d_int_array_3d, p_real);
  
  transformed_param_array = multiply_log(p_real, d_int_array);
  transformed_param_array_2d = multiply_log(p_real, d_int_array_2d);
  transformed_param_array_3d = multiply_log(p_real, d_int_array_3d);
  
  transformed_param_array = multiply_log(p_real_array, d_int);
  transformed_param_array = multiply_log(p_real_array, d_real);
  transformed_param_array = multiply_log(p_real_array, p_real);
  transformed_param_array = multiply_log(d_real_array, p_real);
  transformed_param_array_2d = multiply_log(p_real_array_2d, d_int);
  transformed_param_array_2d = multiply_log(p_real_array_2d, d_real);
  transformed_param_array_2d = multiply_log(p_real_array_2d, p_real);
  transformed_param_array_2d = multiply_log(d_real_array_2d, p_real);
  transformed_param_array_3d = multiply_log(p_real_array_3d, d_int);
  transformed_param_array_3d = multiply_log(p_real_array_3d, d_real);
  transformed_param_array_3d = multiply_log(p_real_array_3d, p_real);
  transformed_param_array_3d = multiply_log(d_real_array_3d, p_real);
  
  transformed_param_array = multiply_log(d_int, p_real_array);
  transformed_param_array = multiply_log(d_real, p_real_array);
  transformed_param_array = multiply_log(p_real, p_real_array);
  transformed_param_array = multiply_log(p_real, d_real_array);
  transformed_param_array_2d = multiply_log(d_int, p_real_array_2d);
  transformed_param_array_2d = multiply_log(d_real, p_real_array_2d);
  transformed_param_array_2d = multiply_log(p_real, p_real_array_2d);
  transformed_param_array_2d = multiply_log(p_real, d_real_array_2d);
  transformed_param_array_3d = multiply_log(d_int, p_real_array_3d);
  transformed_param_array_3d = multiply_log(d_real, p_real_array_3d);
  transformed_param_array_3d = multiply_log(p_real, p_real_array_3d);
  transformed_param_array_3d = multiply_log(p_real, d_real_array_3d);
  
  transformed_param_array = multiply_log(d_real_array, p_real_array);
  transformed_param_array = multiply_log(p_real_array, d_real_array);
  transformed_param_array = multiply_log(p_real_array, p_real_array);
  transformed_param_array_2d = multiply_log(d_real_array_2d, p_real_array_2d);
  transformed_param_array_2d = multiply_log(p_real_array_2d, d_real_array_2d);
  transformed_param_array_2d = multiply_log(p_real_array_2d, p_real_array_2d);
  transformed_param_array_3d = multiply_log(d_real_array_3d, p_real_array_3d);
  transformed_param_array_3d = multiply_log(p_real_array_3d, d_real_array_3d);
  transformed_param_array_3d = multiply_log(p_real_array_3d, p_real_array_3d);
  
  transformed_param_vector = multiply_log(p_vector, p_real);
  transformed_param_vector = multiply_log(p_vector, d_real);
  transformed_param_vector = multiply_log(p_vector, d_int);
  transformed_param_vector = multiply_log(d_vector, p_real);
  transformed_param_vector_array = multiply_log(p_vector_array, p_real);
  transformed_param_vector_array = multiply_log(p_vector_array, d_real);
  transformed_param_vector_array = multiply_log(p_vector_array, d_int);
  transformed_param_vector_array = multiply_log(d_vector_array, p_real);
  transformed_param_vector_array_2d = multiply_log(p_vector_array_2d, p_real);
  transformed_param_vector_array_2d = multiply_log(p_vector_array_2d, d_real);
  transformed_param_vector_array_2d = multiply_log(p_vector_array_2d, d_int);
  transformed_param_vector_array_2d = multiply_log(d_vector_array_2d, p_real);
  transformed_param_vector_array_3d = multiply_log(p_vector_array_3d, p_real);
  transformed_param_vector_array_3d = multiply_log(p_vector_array_3d, d_real);
  transformed_param_vector_array_3d = multiply_log(p_vector_array_3d, d_int);
  transformed_param_vector_array_3d = multiply_log(d_vector_array_3d, p_real);
  
  transformed_param_vector = multiply_log(p_real, p_vector);
  transformed_param_vector = multiply_log(p_real, d_vector);
  transformed_param_vector = multiply_log(d_real, p_vector);
  transformed_param_vector = multiply_log(d_int, p_vector);
  transformed_param_vector_array = multiply_log(p_real, p_vector_array);
  transformed_param_vector_array = multiply_log(p_real, d_vector_array);
  transformed_param_vector_array = multiply_log(d_real, p_vector_array);
  transformed_param_vector_array = multiply_log(d_int, p_vector_array);
  transformed_param_vector_array_2d = multiply_log(p_real, p_vector_array_2d);
  transformed_param_vector_array_2d = multiply_log(p_real, d_vector_array_2d);
  transformed_param_vector_array_2d = multiply_log(d_real, p_vector_array_2d);
  transformed_param_vector_array_2d = multiply_log(d_int, p_vector_array_2d);
  transformed_param_vector_array_3d = multiply_log(p_real, p_vector_array_3d);
  transformed_param_vector_array_3d = multiply_log(p_real, d_vector_array_3d);
  transformed_param_vector_array_3d = multiply_log(d_real, p_vector_array_3d);
  transformed_param_vector_array_3d = multiply_log(d_int, p_vector_array_3d);
  
  transformed_param_vector = multiply_log(p_vector, p_vector);
  transformed_param_vector = multiply_log(p_vector, d_vector);
  transformed_param_vector = multiply_log(d_vector, p_vector);
  transformed_param_vector_array = multiply_log(p_vector_array,
                                                p_vector_array);
  transformed_param_vector_array = multiply_log(p_vector_array,
                                                d_vector_array);
  transformed_param_vector_array = multiply_log(d_vector_array,
                                                p_vector_array);
  transformed_param_vector_array_2d = multiply_log(p_vector_array_2d,
                                                   p_vector_array_2d);
  transformed_param_vector_array_2d = multiply_log(p_vector_array_2d,
                                                   d_vector_array_2d);
  transformed_param_vector_array_2d = multiply_log(d_vector_array_2d,
                                                   p_vector_array_2d);
  transformed_param_vector_array_3d = multiply_log(p_vector_array_3d,
                                                   p_vector_array_3d);
  transformed_param_vector_array_3d = multiply_log(p_vector_array_3d,
                                                   d_vector_array_3d);
  transformed_param_vector_array_3d = multiply_log(d_vector_array_3d,
                                                   p_vector_array_3d);
  
  transformed_param_row_vector = multiply_log(p_row_vector, p_real);
  transformed_param_row_vector = multiply_log(p_row_vector, d_real);
  transformed_param_row_vector = multiply_log(p_row_vector, d_int);
  transformed_param_row_vector = multiply_log(d_row_vector, p_real);
  transformed_param_row_vector_array = multiply_log(p_row_vector_array,
                                                    p_real);
  transformed_param_row_vector_array = multiply_log(p_row_vector_array,
                                                    d_real);
  transformed_param_row_vector_array = multiply_log(p_row_vector_array,
                                                    d_int);
  transformed_param_row_vector_array = multiply_log(d_row_vector_array,
                                                    p_real);
  transformed_param_row_vector_array_2d = multiply_log(p_row_vector_array_2d,
                                                       p_real);
  transformed_param_row_vector_array_2d = multiply_log(p_row_vector_array_2d,
                                                       d_real);
  transformed_param_row_vector_array_2d = multiply_log(p_row_vector_array_2d,
                                                       d_int);
  transformed_param_row_vector_array_2d = multiply_log(d_row_vector_array_2d,
                                                       p_real);
  transformed_param_row_vector_array_3d = multiply_log(p_row_vector_array_3d,
                                                       p_real);
  transformed_param_row_vector_array_3d = multiply_log(p_row_vector_array_3d,
                                                       d_real);
  transformed_param_row_vector_array_3d = multiply_log(p_row_vector_array_3d,
                                                       d_int);
  transformed_param_row_vector_array_3d = multiply_log(d_row_vector_array_3d,
                                                       p_real);
  
  transformed_param_row_vector = multiply_log(p_real, p_row_vector);
  transformed_param_row_vector = multiply_log(d_real, p_row_vector);
  transformed_param_row_vector = multiply_log(d_int, p_row_vector);
  transformed_param_row_vector = multiply_log(p_real, d_row_vector);
  transformed_param_row_vector_array = multiply_log(p_real,
                                                    p_row_vector_array);
  transformed_param_row_vector_array = multiply_log(d_real,
                                                    p_row_vector_array);
  transformed_param_row_vector_array = multiply_log(d_int,
                                                    p_row_vector_array);
  transformed_param_row_vector_array = multiply_log(p_real,
                                                    d_row_vector_array);
  transformed_param_row_vector_array_2d = multiply_log(p_real,
                                                       p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = multiply_log(d_real,
                                                       p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = multiply_log(d_int,
                                                       p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = multiply_log(p_real,
                                                       d_row_vector_array_2d);
  transformed_param_row_vector_array_3d = multiply_log(p_real,
                                                       p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = multiply_log(d_real,
                                                       p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = multiply_log(d_int,
                                                       p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = multiply_log(p_real,
                                                       d_row_vector_array_3d);
  
  transformed_param_row_vector = multiply_log(p_row_vector, p_row_vector);
  transformed_param_row_vector = multiply_log(p_row_vector, d_row_vector);
  transformed_param_row_vector = multiply_log(d_row_vector, p_row_vector);
  transformed_param_row_vector_array = multiply_log(p_row_vector_array,
                                                    p_row_vector_array);
  transformed_param_row_vector_array = multiply_log(p_row_vector_array,
                                                    d_row_vector_array);
  transformed_param_row_vector_array = multiply_log(d_row_vector_array,
                                                    p_row_vector_array);
  transformed_param_row_vector_array_2d = multiply_log(p_row_vector_array_2d,
                                                       p_row_vector_array_2d);
  transformed_param_row_vector_array_2d = multiply_log(p_row_vector_array_2d,
                                                       d_row_vector_array_2d);
  transformed_param_row_vector_array_2d = multiply_log(d_row_vector_array_2d,
                                                       p_row_vector_array_2d);
  transformed_param_row_vector_array_3d = multiply_log(p_row_vector_array_3d,
                                                       p_row_vector_array_3d);
  transformed_param_row_vector_array_3d = multiply_log(p_row_vector_array_3d,
                                                       d_row_vector_array_3d);
  transformed_param_row_vector_array_3d = multiply_log(d_row_vector_array_3d,
                                                       p_row_vector_array_3d);
  
  transformed_param_matrix = multiply_log(p_matrix, p_real);
  transformed_param_matrix = multiply_log(p_matrix, d_real);
  transformed_param_matrix = multiply_log(p_matrix, d_int);
  transformed_param_matrix = multiply_log(d_matrix, p_real);
  transformed_param_matrix_array = multiply_log(p_matrix_array, p_real);
  transformed_param_matrix_array = multiply_log(p_matrix_array, d_real);
  transformed_param_matrix_array = multiply_log(p_matrix_array, d_int);
  transformed_param_matrix_array = multiply_log(d_matrix_array, p_real);
  transformed_param_matrix_array_2d = multiply_log(p_matrix_array_2d, p_real);
  transformed_param_matrix_array_2d = multiply_log(p_matrix_array_2d, d_real);
  transformed_param_matrix_array_2d = multiply_log(p_matrix_array_2d, d_int);
  transformed_param_matrix_array_2d = multiply_log(d_matrix_array_2d, p_real);
  transformed_param_matrix_array_3d = multiply_log(p_matrix_array_3d, p_real);
  transformed_param_matrix_array_3d = multiply_log(p_matrix_array_3d, d_real);
  transformed_param_matrix_array_3d = multiply_log(p_matrix_array_3d, d_int);
  transformed_param_matrix_array_3d = multiply_log(d_matrix_array_3d, p_real);
  
  transformed_param_matrix = multiply_log(p_real, p_matrix);
  transformed_param_matrix = multiply_log(p_real, d_matrix);
  transformed_param_matrix = multiply_log(d_real, p_matrix);
  transformed_param_matrix = multiply_log(d_int, p_matrix);
  transformed_param_matrix_array = multiply_log(p_real, p_matrix_array);
  transformed_param_matrix_array = multiply_log(p_real, d_matrix_array);
  transformed_param_matrix_array = multiply_log(d_real, p_matrix_array);
  transformed_param_matrix_array = multiply_log(d_int, p_matrix_array);
  transformed_param_matrix_array_2d = multiply_log(p_real, p_matrix_array_2d);
  transformed_param_matrix_array_2d = multiply_log(p_real, d_matrix_array_2d);
  transformed_param_matrix_array_2d = multiply_log(d_real, p_matrix_array_2d);
  transformed_param_matrix_array_2d = multiply_log(d_int, p_matrix_array_2d);
  transformed_param_matrix_array_3d = multiply_log(p_real, p_matrix_array_3d);
  transformed_param_matrix_array_3d = multiply_log(p_real, d_matrix_array_3d);
  transformed_param_matrix_array_3d = multiply_log(d_real, p_matrix_array_3d);
  transformed_param_matrix_array_3d = multiply_log(d_int, p_matrix_array_3d);
  
  transformed_param_matrix = multiply_log(p_matrix, p_matrix);
  transformed_param_matrix = multiply_log(p_matrix, d_matrix);
  transformed_param_matrix = multiply_log(d_matrix, p_matrix);
  transformed_param_matrix_array = multiply_log(p_matrix_array,
                                                p_matrix_array);
  transformed_param_matrix_array = multiply_log(p_matrix_array,
                                                d_matrix_array);
  transformed_param_matrix_array = multiply_log(d_matrix_array,
                                                p_matrix_array);
  transformed_param_matrix_array_2d = multiply_log(p_matrix_array_2d,
                                                   p_matrix_array_2d);
  transformed_param_matrix_array_2d = multiply_log(p_matrix_array_2d,
                                                   d_matrix_array_2d);
  transformed_param_matrix_array_2d = multiply_log(d_matrix_array_2d,
                                                   p_matrix_array_2d);
  transformed_param_matrix_array_3d = multiply_log(p_matrix_array_3d,
                                                   p_matrix_array_3d);
  transformed_param_matrix_array_3d = multiply_log(p_matrix_array_3d,
                                                   d_matrix_array_3d);
  transformed_param_matrix_array_3d = multiply_log(d_matrix_array_3d,
                                                   p_matrix_array_3d);
}
model {
  y_p ~ normal(0, 1);
}

Warning in 'multiply_log.stan', line 41, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 42, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 43, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 44, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 45, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 46, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 48, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 49, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 50, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 51, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 52, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 53, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 55, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 56, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 57, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 58, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 59, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 60, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 62, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 63, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 64, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 65, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 66, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 67, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 69, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 70, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 71, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 72, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 73, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 74, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 76, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 77, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 78, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 79, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 80, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 81, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 82, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 83, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 85, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 86, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 87, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 88, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 89, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 90, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 91, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 92, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 94, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 95, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 96, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 97, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 99, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 100, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 101, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 102, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 103, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 104, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 105, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 106, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 108, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 109, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 110, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 111, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 112, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 113, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 114, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 115, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 117, column 32: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 118, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 119, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 120, column 41: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 122, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 123, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 124, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 125, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 126, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 127, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 128, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 129, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 131, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 132, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 133, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 134, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 135, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 136, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 137, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 138, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 140, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 141, column 34: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 142, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 143, column 37: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 181, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 182, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 183, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 185, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 186, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 187, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 189, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 190, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 191, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 192, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 193, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 194, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 195, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 196, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 197, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 198, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 199, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 200, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 202, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 203, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 204, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 205, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 206, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 207, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 208, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 209, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 210, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 211, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 212, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 213, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 215, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 216, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 217, column 28: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 218, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 219, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 220, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 221, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 222, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 223, column 31: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 225, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 226, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 227, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 228, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 229, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 230, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 231, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 232, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 233, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 234, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 235, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 236, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 237, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 238, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 239, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 240, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 242, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 243, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 244, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 245, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 246, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 247, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 248, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 249, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 250, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 251, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 252, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 253, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 254, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 255, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 256, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 257, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 259, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 260, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 261, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 262, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 263, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 264, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 265, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 266, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 267, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 268, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 269, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 270, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 272, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 273, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 274, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 275, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 276, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 277, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 278, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 279, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 280, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 281, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 282, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 283, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 284, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 285, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 286, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 287, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 289, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 290, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 291, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 292, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 293, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 294, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 295, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 296, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 297, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 298, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 299, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 300, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 301, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 302, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 303, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 304, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 306, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 307, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 308, column 33: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 309, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 310, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 311, column 39: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 312, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 313, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 314, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 315, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 316, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 317, column 42: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 319, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 320, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 321, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 322, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 323, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 324, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 325, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 326, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 327, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 328, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 329, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 330, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 331, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 332, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 333, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 334, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 336, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 337, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 338, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 339, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 340, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 341, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 342, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 343, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 344, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 345, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 346, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 347, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 348, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 349, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 350, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 351, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 353, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 354, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 355, column 29: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 356, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 357, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 358, column 35: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 359, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 360, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 361, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 362, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 363, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'multiply_log.stan', line 364, column 38: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format old-log-funs.stan
transformed data {
  real x;
  x = multiply_log(x, x); // should raise deprecation warning
  x = binomial_coefficient_log(x, x); // ditto
  x = lmultiply(x, x); // new function is OK
  x = lchoose(x, x); // new function is OK
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

Warning in 'old-log-funs.stan', line 3, column 6: multiply_log is deprecated
    and will be removed in Stan 2.32.0. Use lmultiply instead. This can be
    automatically changed using stanc --print-canonical
Warning in 'old-log-funs.stan', line 4, column 6: binomial_coefficient_log is
    deprecated and will be removed in Stan 2.32.0. Use lchoose instead. This
    can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format pound-comment-deprecated.stan
data {
  // hey, this is the old way to do things, should raise warning
  int N;
}
model {
  
}

Warning in 'pound-comment-deprecated.stan', line 2, column 2: Comments
    beginning with # are deprecated and this syntax will be removed in Stan
    2.32.0. Use // to begin line comments; this can be done automatically
    using stanc --auto-format
  $ ../../../../../install/default/bin/stanc --auto-format unreserved-array-keyword.stan
functions {
  real f(array[,,] real array) {
    return array[1, 2, 3];
  }
}
model {
  real array;
  array[1, 2, 3] real abc;
}

Warning in 'unreserved-array-keyword.stan', line 2, column 24: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'unreserved-array-keyword.stan', line 2, column 40: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'unreserved-array-keyword.stan', line 6, column 7: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
  $ ../../../../../install/default/bin/stanc --auto-format validate_division_int_warning.stan
transformed data {
  real u;
  int j;
  int k;
  j = 2;
  k = 3;
  u = j / k;
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

Warning in 'validate_division_int_warning.stan', line 7, column 6: Found int
    division:
      j / k
    Values will be rounded towards zero. If rounding is not desired you can
    write
    the division as
      j * 1.0 / k
    If rounding is intended please use the integer division operator %/%.
  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning1.stan
parameters {
  real y;
}
model {
  log(y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning2.stan
parameters {
  real y;
}
model {
  (y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning3.stan
parameters {
  vector[5] v;
}
model {
  (v' * v) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning4.stan
parameters {
  real y;
}
model {
  1 + (y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning5.stan
parameters {
  vector[10] y;
}
model {
  head((y .* y), 2) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning6.stan
parameters {
  real y;
}
model {
  -(y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning_user.stan
parameters {
  vector[1] y;
}
model {
  exp(y[1]) ~ normal(0, 2);
}

