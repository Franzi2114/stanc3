  $ ../../../../../install/default/bin/stanc --auto-format abs-deprecate.stan
transformed data {
  real mu;
  mu = abs(-1.2);
}
parameters {
  real y;
}
model {
  y ~ normal(mu, 1);
}

Warning in 'abs-deprecate.stan', line 3, column 7: Use of the `abs` function
    with real-valued arguments is deprecated; use function `fabs` instead.
  $ ../../../../../install/default/bin/stanc --auto-format deprecated_syntax.stan
functions {
  real foo_log(real alpha, real beta) {
    return 1.0;
  }
  
  real foo_t_log(real alpha, real beta) {
    return 1.0;
  }
}
data {
  real a;
  vector[3] b;
  array[7] real c;
  array[8, 9] real d;
}
parameters {
  real y;
  real e;
  vector[3] f;
  array[7] real g;
  array[8, 9] real h;
}
model {
  // old distriubtion suffixes
  target += normal_log(y, 0, 1) + normal_cdf_log(2, 0, 1)
            + normal_ccdf_log(3, 0, 1);
  // increment log prob
  increment_log_prob(a);
  increment_log_prob(b);
  increment_log_prob(b);
  increment_log_prob(c);
  increment_log_prob(d);
  increment_log_prob(e);
  increment_log_prob(f);
  increment_log_prob(g);
  increment_log_prob(h);
  // cdf without |
  increment_log_prob(bernoulli_cdf(0, 1));
  // getlp
  real x = get_lp();
  // old array syntax
  array[5] real xyz;
  // future reserved words
  int offset;
  int array;
  // deprecated functions
  real z = multiply_log(3.4, 3.5);
  
  // old comment
  
  // old assign
  z <- 3;
  
  // _log UDFs
  target += foo_t_log(1, 3);
  1 ~ foo(3);
}

Warning in 'deprecated_syntax.stan', line 30, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 31, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 32, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 33, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 34, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 35, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 36, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 37, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 38, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 40, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 42, column 11: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 46, column 6: Variable name
    'offset' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'deprecated_syntax.stan', line 47, column 6: Variable name 'array'
    will be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'deprecated_syntax.stan', line 51, column 2: Comments beginning
    with # are deprecated and this syntax will be removed in Stan 2.32.0. Use
    // to begin line comments; this can be done automatically using stanc
    --auto-format
Warning in 'deprecated_syntax.stan', line 54, column 4: assignment operator
    <- is deprecated in the Stan language and will be removed in Stan 2.32.0;
    use = instead. This can be done automatically with stanc
    --print-canonical
Warning in 'deprecated_syntax.stan', line 2, column 9: Use of the _log suffix
    in user defined probability functions is deprecated and will be removed
    in Stan 2.32.0, use name 'foo_lpdf' instead if you intend on using this
    function in ~ statements or calling unnormalized probability functions
    inside of it.
Warning in 'deprecated_syntax.stan', line 6, column 8: Use of the _log suffix
    in user defined probability functions is deprecated and will be removed
    in Stan 2.32.0, use name 'foo_t_lpdf' instead if you intend on using this
    function in ~ statements or calling unnormalized probability functions
    inside of it.
Warning in 'deprecated_syntax.stan', line 26, column 12: normal_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lpdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 27, column 6: normal_cdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lcdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 28, column 6: normal_ccdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lccdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 40, column 21: Use of bernoulli_cdf
    without a vertical bar (|) between the first two arguments of a CDF is
    deprecated and will be removed in Stan 2.32.0. This can be automatically
    changed using stanc --print-canonical
Warning in 'deprecated_syntax.stan', line 49, column 11: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format duplicate-warns.stan
model {
  real foo;
  foo = 1;
  increment_log_prob(0);
  foo = get_lp();
  foo = multiply_log(1, 1);
  foo = binomial_coefficient_log(1, 1);
  // deprecated distribution functions versions
  foo = normal_log(0.5, 0, 1);
  foo = normal_cdf_log(0.5, 0, 1);
  foo = normal_ccdf_log(0.5, 0, 1);
}

Warning in 'duplicate-warns.stan', line 4, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'duplicate-warns.stan', line 5, column 8: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
Warning in 'duplicate-warns.stan', line 6, column 8: multiply_log is
    deprecated and will be removed in Stan 2.32.0. Use lmultiply instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 7, column 8: binomial_coefficient_log
    is deprecated and will be removed in Stan 2.32.0. Use lchoose instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 9, column 8: normal_log is deprecated
    and will be removed in Stan 2.32.0. Use normal_lpdf instead. This can be
    automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 10, column 8: normal_cdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lcdf instead.
    This can be automatically changed using stanc --print-canonical
Warning in 'duplicate-warns.stan', line 11, column 8: normal_ccdf_log is
    deprecated and will be removed in Stan 2.32.0. Use normal_lccdf instead.
    This can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format empty.stan

Warning: Empty file 'empty.stan' detected; this is a valid stan model but
    likely unintended!
  $ ../../../../../install/default/bin/stanc --auto-format get-lp-deprecate.stan
parameters {
  real<lower=0> y;
}
model {
  print("target=", get_lp());
  y ~ normal(0, 1);
}

Warning in 'get-lp-deprecate.stan', line 5, column 19: get_lp() function is
    deprecated. It will be removed in Stan 2.32.0. Use target() instead. This
    can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format identifiers.stan
data {
  int upper;
  int lower;
  int multiplier;
  int offset;
}

Warning in 'identifiers.stan', line 2, column 6: Variable name 'upper' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 3, column 6: Variable name 'lower' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 4, column 6: Variable name 'multiplier'
    will be a reserved word starting in Stan 2.32.0. Please rename it!
Warning in 'identifiers.stan', line 5, column 6: Variable name 'offset' will
    be a reserved word starting in Stan 2.32.0. Please rename it!
  $ ../../../../../install/default/bin/stanc --auto-format increment_log_prob.stan
transformed data {
  int n;
  array[2] int nn;
  array[3, 4] int nnn;
  
  real x;
  array[5] real xx;
  array[6, 7] real xxx;
  array[8, 9, 10] real xxxx;
  
  vector[2] v;
  array[4] vector[3] vv;
  array[5, 6] vector[4] vvv;
  
  row_vector[2] rv;
  array[4] row_vector[3] rvv;
  array[5, 6] row_vector[4] rvvv;
  
  matrix[7, 8] m;
  array[2] matrix[7, 8] mm;
  array[3, 4] matrix[7, 8] mmm;
}
parameters {
  real p_x;
  array[5] real p_xx;
  array[6, 7] real p_xxx;
  array[8, 9, 10] real p_xxxx;
  
  vector[2] p_v;
  array[4] vector[3] p_vv;
  array[5, 6] vector[4] p_vvv;
  
  row_vector[2] p_rv;
  array[4] row_vector[3] p_rvv;
  array[5, 6] row_vector[4] p_rvvv;
  
  matrix[7, 8] p_m;
  array[2] matrix[7, 8] p_mm;
  array[3, 4] matrix[7, 8] p_mmm;
}
model {
  increment_log_prob(n);
  increment_log_prob(nn);
  increment_log_prob(nnn);
  
  increment_log_prob(x);
  increment_log_prob(xx);
  increment_log_prob(xxx);
  increment_log_prob(xxxx);
  
  increment_log_prob(v);
  increment_log_prob(vv);
  increment_log_prob(vvv);
  
  increment_log_prob(rv);
  increment_log_prob(rvv);
  increment_log_prob(rvvv);
  
  increment_log_prob(m);
  increment_log_prob(mm);
  increment_log_prob(mmm);
  
  increment_log_prob(p_x);
  increment_log_prob(p_xx);
  increment_log_prob(p_xxx);
  increment_log_prob(p_xxxx);
  
  increment_log_prob(p_v);
  increment_log_prob(p_vv);
  increment_log_prob(p_vvv);
  
  increment_log_prob(p_rv);
  increment_log_prob(p_rvv);
  increment_log_prob(p_rvvv);
  
  increment_log_prob(p_m);
  increment_log_prob(p_mm);
  increment_log_prob(p_mmm);
}

Warning in 'increment_log_prob.stan', line 42, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 43, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 44, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 46, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 47, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 48, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 49, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 51, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 52, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 53, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 55, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 56, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 57, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 59, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 60, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 61, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 64, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 65, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 66, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 67, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 69, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 70, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 71, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 73, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 74, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 75, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 77, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 78, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
Warning in 'increment_log_prob.stan', line 79, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format int_div_user.stan
data {
  array[4] int a;
  array[3] int b;
}
transformed data {
  int c;
  c = a[1] / b[2];
}
model {
  
}

Warning in 'int_div_user.stan', line 7, column 6: Found int division:
      a[1] / b[2]
    Values will be rounded towards zero. If rounding is not desired you can
    write
    the division as
      a[1] * 1.0 / b[2]
    If rounding is intended please use the integer division operator %/%.
  $ ../../../../../install/default/bin/stanc --auto-format integrate_1d_good.stan
functions {
  real foo(real x, real xc, array[] real theta, array[] real x_r,
           array[] int x_i) {
    return x ^ 2;
  }
}
data {
  array[2] real x_r;
  array[10] int x_i;
}
transformed data {
  array[3] real theta_d;
  real int_foo1 = integrate_1d(foo, 0.2, 1.3, theta_d, x_r, x_i, 0.01);
}
parameters {
  real lb;
  real ub;
  array[3] real theta;
}
model {
  real int_foo2 = integrate_1d(foo, 0.2, 1.3, theta, x_r, x_i, 0.01);
  real int_foo3 = integrate_1d(foo, lb, 1.3, theta, x_r, x_i, 0.01);
  real int_foo4 = integrate_1d(foo, 0.2, ub, theta, x_r, x_i, 0.01);
  real int_foo5 = integrate_1d(foo, lb, ub, theta, x_r, x_i, 0.01);
  real int_foo6 = integrate_1d(foo, 0.2, 1.3, theta_d, x_r, x_i, 0.01);
  real int_foo7 = integrate_1d(foo, lb, 1.3, theta_d, x_r, x_i, 0.01);
  real int_foo8 = integrate_1d(foo, 0.2, ub, theta_d, x_r, x_i, 0.01);
  real int_foo9 = integrate_1d(foo, lb, ub, theta_d, x_r, x_i, 0.01);
}

  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_adams.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                              1e-10, 1e8);
  y_hat = integrate_ode_adams(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                              1e-10, 1e8);
}

Warning in 'integrate_ode_adams.stan', line 28, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 29, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 30, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 32, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 33, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 34, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 38, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 39, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 40, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 41, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 43, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 44, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 45, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_adams.stan', line 46, column 10: integrate_ode_adams
    is deprecated and will be removed in Stan 3.0. Use ode_adams instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_bdf.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int);
  
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_d, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_d, x, x_int, 1e-10,
                            1e-10, 1e8);
  y_hat = integrate_ode_bdf(sho, y0_p, t0, ts, theta_p, x, x_int, 1e-10,
                            1e-10, 1e8);
}

Warning in 'integrate_ode_bdf.stan', line 28, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 29, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 30, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 31, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 33, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 34, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 35, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 36, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 40, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 41, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 42, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 43, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 45, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 46, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 47, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_bdf.stan', line 48, column 10: integrate_ode_bdf is
    deprecated and will be removed in Stan 3.0. Use ode_bdf instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_deprecation.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0;
  real t0;
  array[T] real ts;
  array[1] real theta;
}
transformed data {
  array[0] real x;
  array[0] int x_int;
}
model {
  
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode(sho, y0, t0, ts, theta, x, x_int);
  
  // add measurement error
  for (t in 1 : T) {
    y_hat[t, 1] = y_hat[t, 1] + normal_rng(0, 0.1);
    y_hat[t, 2] = y_hat[t, 2] + normal_rng(0, 0.1);
  }
}

Warning in 'integrate_ode_deprecation.stan', line 28, column 10: integrate_ode
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format integrate_ode_rk45.stan
functions {
  array[] real sho(real t, array[] real y, array[] real theta,
                   array[] real x, array[] int x_int) {
    array[2] real dydt;
    dydt[1] = y[2];
    dydt[2] = -y[1] - theta[1] * y[2];
    return dydt;
  }
}
data {
  int<lower=1> T;
  array[2] real y0_d;
  real t0;
  array[T] real ts;
  array[1] real theta_d;
  array[0] real x;
  array[0] int x_int;
}
parameters {
  array[2] real y0_p;
  array[1] real theta_p;
}
model {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_p, x, x_int);
}
generated quantities {
  array[T, 2] real y_hat;
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_d, t0, ts, theta_p, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_d, x, x_int);
  y_hat = integrate_ode_rk45(sho, y0_p, t0, ts, theta_p, x, x_int);
}

Warning in 'integrate_ode_rk45.stan', line 28, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 29, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 30, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 31, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 35, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 36, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 37, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
Warning in 'integrate_ode_rk45.stan', line 38, column 10: integrate_ode_rk45
    is deprecated and will be removed in Stan 3.0. Use ode_rk45 instead. 
    The new interface is slightly different, see:
    https://mc-stan.org/users/documentation/case-studies/convert_odes.html
  $ ../../../../../install/default/bin/stanc --auto-format lkj_cov_deprecation1.stan
parameters {
  cov_matrix[3] Sigma;
  vector[3] mu;
  vector[3] sigma;
  real<lower=0> eta;
}
model {
  Sigma ~ lkj_cov(mu, sigma, eta);
}

  $ ../../../../../install/default/bin/stanc --auto-format lkj_cov_deprecation2.stan
parameters {
  cov_matrix[3] Sigma;
  vector[3] mu;
  vector[3] sigma;
  real<lower=0> eta;
}
model {
  increment_log_prob(lkj_cov_log(Sigma, mu, sigma, eta));
}

Warning in 'lkj_cov_deprecation2.stan', line 8, column 2: increment_log_prob(...);
    is deprecated and will be removed in Stan 2.32.0. Use target += ...;
    instead. This can be done automatically with stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format matrix_pow_warning.stan
data {
  int<lower=0> N;
  matrix[N, N] A;
  int power;
}
transformed data {
  matrix[N, N] A_pow = A ^ power;
  matrix[N, N] A_pow_r = A ^ 3.5;
}

Warning in 'matrix_pow_warning.stan', line 8, column 23: Found matrix^scalar:
      A ^ power
    matrix ^ number is interpreted as element-wise exponentiation. If this
    is
    intended, you can silence this warning by using elementwise operator .^
    If you intended matrix exponentiation, use the
    function
    matrix_power(matrix,int) instead.
Warning in 'matrix_pow_warning.stan', line 9, column 25: Found matrix^scalar:
      A ^ 3.5
    matrix ^ number is interpreted as element-wise exponentiation. If this
    is
    intended, you can silence this warning by using elementwise operator .^
    If you intended matrix exponentiation, use the
    function
    matrix_power(matrix,int) instead.
  $ ../../../../../install/default/bin/stanc --auto-format old-log-funs.stan
transformed data {
  real x;
  x = multiply_log(x, x); // should raise deprecation warning
  x = binomial_coefficient_log(x, x); // ditto
  x = lmultiply(x, x); // new function is OK
  x = lchoose(x, x); // new function is OK
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

Warning in 'old-log-funs.stan', line 3, column 6: multiply_log is deprecated
    and will be removed in Stan 2.32.0. Use lmultiply instead. This can be
    automatically changed using stanc --print-canonical
Warning in 'old-log-funs.stan', line 4, column 6: binomial_coefficient_log is
    deprecated and will be removed in Stan 2.32.0. Use lchoose instead. This
    can be automatically changed using stanc --print-canonical
  $ ../../../../../install/default/bin/stanc --auto-format pound-comment-deprecated.stan
data {
  // hey, this is the old way to do things, should raise warning
  int N;
}
model {
  
}

Warning in 'pound-comment-deprecated.stan', line 2, column 2: Comments
    beginning with # are deprecated and this syntax will be removed in Stan
    2.32.0. Use // to begin line comments; this can be done automatically
    using stanc --auto-format
  $ ../../../../../install/default/bin/stanc --auto-format unreserved-array-keyword.stan
functions {
  real f(array[,,] real array) {
    return array[1, 2, 3];
  }
}
model {
  real array;
  array[1, 2, 3] real abc;
}

Warning in 'unreserved-array-keyword.stan', line 2, column 24: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'unreserved-array-keyword.stan', line 2, column 40: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
Warning in 'unreserved-array-keyword.stan', line 6, column 7: Variable name
    'array' will be a reserved word starting in Stan 2.32.0. Please rename
    it!
  $ ../../../../../install/default/bin/stanc --auto-format validate_division_int_warning.stan
transformed data {
  real u;
  int j;
  int k;
  j = 2;
  k = 3;
  u = j / k;
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

Warning in 'validate_division_int_warning.stan', line 7, column 6: Found int
    division:
      j / k
    Values will be rounded towards zero. If rounding is not desired you can
    write
    the division as
      j * 1.0 / k
    If rounding is intended please use the integer division operator %/%.
  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning1.stan
parameters {
  real y;
}
model {
  log(y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning2.stan
parameters {
  real y;
}
model {
  (y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning3.stan
parameters {
  vector[5] v;
}
model {
  (v' * v) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning4.stan
parameters {
  real y;
}
model {
  1 + (y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning5.stan
parameters {
  vector[10] y;
}
model {
  head((y .* y), 2) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning6.stan
parameters {
  real y;
}
model {
  -(y * y) ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format validate_jacobian_warning_user.stan
parameters {
  vector[1] y;
}
model {
  exp(y[1]) ~ normal(0, 2);
}

